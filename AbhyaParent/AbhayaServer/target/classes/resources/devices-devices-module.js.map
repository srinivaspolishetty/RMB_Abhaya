{"version":3,"sources":["webpack:///./src/app/common/models/device-communication-model.ts","webpack:///./src/app/common/models/device-details-model.ts","webpack:///./src/app/common/models/emergencymonitoring.model.ts","webpack:///./src/app/common/models/healthmonitoring.model.ts","webpack:///./src/app/common/models/rawdata.model.ts","webpack:///./src/app/mainComponents/devices/devicecommunication/devicecommunication.component.html","webpack:///./src/app/mainComponents/devices/devicecommunication/devicecommunication.component.sass","webpack:///./src/app/mainComponents/devices/devicecommunication/devicecommunication.component.ts","webpack:///./src/app/mainComponents/devices/devicereport/devicereport.component.html","webpack:///./src/app/mainComponents/devices/devicereport/devicereport.component.sass","webpack:///./src/app/mainComponents/devices/devicereport/devicereport.component.ts","webpack:///./src/app/mainComponents/devices/devices.component.html","webpack:///./src/app/mainComponents/devices/devices.component.sass","webpack:///./src/app/mainComponents/devices/devices.component.ts","webpack:///./src/app/mainComponents/devices/devices.module.ts","webpack:///./src/app/mainComponents/devices/devicesRoutingModule.ts","webpack:///./src/app/mainComponents/devices/emergencymonitoring/emergencymonitoring.component.html","webpack:///./src/app/mainComponents/devices/emergencymonitoring/emergencymonitoring.component.sass","webpack:///./src/app/mainComponents/devices/emergencymonitoring/emergencymonitoring.component.ts","webpack:///./src/app/mainComponents/devices/healthmonitoring/healthmonitoring.component.html","webpack:///./src/app/mainComponents/devices/healthmonitoring/healthmonitoring.component.sass","webpack:///./src/app/mainComponents/devices/healthmonitoring/healthmonitoring.component.ts","webpack:///./src/app/mainComponents/devices/locationmonitoring/locationmonitoring.component.html","webpack:///./src/app/mainComponents/devices/locationmonitoring/locationmonitoring.component.sass","webpack:///./src/app/mainComponents/devices/locationmonitoring/locationmonitoring.component.ts","webpack:///./src/app/mainComponents/devices/modalpopup/editviewdevicecomm/editviewdevicecomm.component.html","webpack:///./src/app/mainComponents/devices/modalpopup/editviewdevicecomm/editviewdevicecomm.component.sass","webpack:///./src/app/mainComponents/devices/modalpopup/editviewdevicecomm/editviewdevicecomm.component.ts","webpack:///./src/app/mainComponents/devices/modalpopup/editviewdevices/editviewdevices.component.html","webpack:///./src/app/mainComponents/devices/modalpopup/editviewdevices/editviewdevices.component.sass","webpack:///./src/app/mainComponents/devices/modalpopup/editviewdevices/editviewdevices.component.ts","webpack:///./src/app/mainComponents/devices/modalpopup/editviewemergency/editviewemergency.component.html","webpack:///./src/app/mainComponents/devices/modalpopup/editviewemergency/editviewemergency.component.sass","webpack:///./src/app/mainComponents/devices/modalpopup/editviewemergency/editviewemergency.component.ts","webpack:///./src/app/mainComponents/devices/modalpopup/editviewhealth/editviewhealth.component.html","webpack:///./src/app/mainComponents/devices/modalpopup/editviewhealth/editviewhealth.component.sass","webpack:///./src/app/mainComponents/devices/modalpopup/editviewhealth/editviewhealth.component.ts","webpack:///./src/app/mainComponents/devices/modalpopup/editviewmovement/editviewmovement.component.html","webpack:///./src/app/mainComponents/devices/modalpopup/editviewmovement/editviewmovement.component.sass","webpack:///./src/app/mainComponents/devices/modalpopup/editviewmovement/editviewmovement.component.ts","webpack:///./src/app/mainComponents/devices/modalpopup/editviewrawdata/editviewrawdata.component.html","webpack:///./src/app/mainComponents/devices/modalpopup/editviewrawdata/editviewrawdata.component.sass","webpack:///./src/app/mainComponents/devices/modalpopup/editviewrawdata/editviewrawdata.component.ts","webpack:///./src/app/mainComponents/devices/movement/movement.component.html","webpack:///./src/app/mainComponents/devices/movement/movement.component.sass","webpack:///./src/app/mainComponents/devices/movement/movement.component.ts","webpack:///./src/app/mainComponents/devices/rawdata/rawdata.component.html","webpack:///./src/app/mainComponents/devices/rawdata/rawdata.component.sass","webpack:///./src/app/mainComponents/devices/rawdata/rawdata.component.ts"],"names":[],"mappings":"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","file":"devices-devices-module.js","sourcesContent":["export class deviceCommunicationModel {\r\n    public batteryPercentage: Number;\r\n    public createdDate: string;\r\n    public deviceCommunicationId: Number;\r\n    public emergencyStatus: string;\r\n    public engineStatus: string;\r\n    public gsmSignalStrength: string;\r\n    public ignitionStatus: string;\r\n    public imeiNumber: string;\r\n    public internalBatteryVoltage:string;\r\n    public isDeviceOverSpeed: string;\r\n    public langitude: string;\r\n    public latitude: string;\r\n    public location: string;\r\n    public lowBatteryThreshold: string;\r\n    public mainPowerStatus : string;\r\n    public memoryPercentage: string;\r\n    public movement: string;\r\n    public networkDate: string;\r\n    public networkTime: string;\r\n    public prevLangitude: string;\r\n    public prevLatitude: string;\r\n    public prevNetworkDate: string;\r\n    public prevNetworkTime: string;\r\n    public speed: string;\r\n    public status: string;\r\n    public tamperAlert: string;\r\n    public updatedDate: string;\r\n    public vehicleMode: string;\r\n    public vehicleModeId: string;\r\n    public vehicleRegNo: string;\r\n    public serialNumber:string;\r\n}\r\n","import { PageModel } from './page.model';\r\n\r\nexport class deviceDetailsModel {\r\n    public id: number;\r\n    public createdDate: string;\r\n    public imeiNumber: string;\r\n    public imsiNumber: string;\r\n    public ipAddress: string;\r\n    public mobileNumber: string;\r\n    public modemDeviceId: Number;\r\n    public serialNumber: string;\r\n    public signalStrength: string;\r\n    public simNumber: string;\r\n    public version: string;\r\n    public selectedEvent: string;\r\n    public simDetails: any;\r\n    public page: PageModel;\r\n    public content: any;\r\n}\r\n","import { PageModel } from './page.model';\r\nexport class EmergencyModel {\r\n    public altitude: string;\r\n    public checksum: string;\r\n    public createdDate: string;\r\n    public distance: string;\r\n    public ebpPacketDataId: Number;\r\n    public endCharacter: string;\r\n    public gpsValidity: string;\r\n    public imeiNumber: string;\r\n    public latitude: string;\r\n    public latitudeDirection: string;\r\n    public longitude: string;\r\n    public longitudeDirection: string;\r\n    public packetStaus: string;\r\n    public packetType: string;\r\n    public provider: string;\r\n    public replyNumber: string;\r\n    public speed: string;\r\n    public timestamp: string;\r\n    public vehicleRegNo: string;\r\n    public networkDate: string;\r\n    public networkTime: string;\r\n    public page: PageModel;\r\n    public content: any;\r\n}\r\n","import { PageModel } from './page.model';\r\nexport class HealthModel {\r\n    public analogIOStatus: string;\r\n    public batteryPercentage: string;\r\n    public createdDate: string;\r\n    public dataUpdateOFF: string;\r\n    public dataUpdateON: string;    \r\n    public digitalIOStatus: string;\r\n    public endOfPacket: string;\r\n    public firmwareVersion: string;\r\n    public hmpPacketDataId: Number;\r\n    public imeiNumber: string;\r\n    public lowBatteryThrValue: string;\r\n    public memoryPercentage: string;\r\n    public vendorId: string;\r\n    public networkDate: string;\r\n    public networkTime: string;\r\n    public page: PageModel;\r\n    public content: any;\r\n}\r\n","export class RawData {\r\n    public rawDataId: Number;\r\n    public imeiNumber: string;\r\n    public packetStatus: string;\r\n    public serialNumber: string;\r\n    public vehicleRegNo: string;\r\n    public cvpType: string;\r\n    public networkDate: string;\r\n    public networkTime: string;\r\n    public createdDate: string;\r\n    public vehicleModeId: string;\r\n    public packetType : string;\r\n    public rawData: string;\r\n    public content: any;\r\n}\r\n","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n  <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n    <div class=\\\"col-md-6 p-l-0\\\">\\n      <h4>Devices Communication</h4>\\n    </div>\\n    <div class=\\\"col-md-5 text-right\\\">\\n      <span class=\\\"btn-circle\\\"><i class=\\\"icon-ab_download\\\"></i></span>\\n      <span class=\\\"btn-circle m-r-1\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"icon-ab-refresh\\\"></i></span>\\n    </div>\\n    <div class=\\\"col-md-1 p-r-0 text-right\\\">\\n      <div class=\\\"filters\\\">\\n        <button type=\\\"button\\\" class=\\\"filters-button\\\" [ngClass]=\\\"{ 'active': showFilters}\\\" (click)=\\\"toggleFilters()\\\">\\n          <i class=\\\"icon-ab-searchfilter\\\"></i>\\n          <span>Filters</span>\\n        </button>\\n        <div class=\\\"filters-body \\\" *ngIf=\\\"showFilters\\\">\\n          <div class=\\\"arrow-up\\\"></div>\\n          <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && applyFilters(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n            <app-citydistrict #validateCityDistrict (isCityDistrictValid)=\\\"isCityDistrictValid($event)\\\"\\n              [cityDistrictConfig]='cityDistrictConfig'></app-citydistrict>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label>DATE</label>\\n                  <app-datepicker\\n                      class=\\\"form-control bdr-none p-a-0\\\"\\n                      name=\\\"searchDate\\\" \\n                      [(ngModel)]=\\\"searchDate\\\"\\n                      #searchDatectrl= \\\"ngModel\\\"\\n                      appForbiddenName=\\\"fred\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && searchDatectrl.invalid }\\\"\\n                      [datePickerModel]=\\\"datePickerModel\\\"          \\n                      searchDatectrl>\\n                  </app-datepicker>\\n               <div *ngIf=\\\"f.submitted && searchDatectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"searchDatectrl.errors.required\\\">Search Date is required</div>\\n               </div>\\n              </div>\\n            <div class=\\\"form-group m-t-3\\\">\\n              <button class=\\\"btn btn-primary w-100p\\\" type=\\\"submit\\\">Search</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/devices']\\\">Devices</a></li>\\n          <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Devices Communication</li>\\n        </ol>\\n      </nav>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row no-gutters m-b-3\\\">\\n      <div class=\\\"col-md-6 p-a-0\\\">\\n          <div class=\\\"form-group abhaya-table-search focal-point\\\">\\n            <i class=\\\"icon-ab-search\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getAllDevices()\\\" placeholder=\\\"Search by IMEI / Vehicle / IOT No.\\\">\\n            <span class=\\\"separator\\\"> </span>\\n          </div>\\n        </div>\\n    <div class=\\\"col-md-6 p-a-0 text-primary p-t-2 text-right\\\">\\n      Total Records : <h5 class=\\\"total-records-text d-inline-block\\\"> {{page.totalElements}}</h5>\\n    </div>\\n    \\n  </div>\\n\\n  <div class=\\\"row no-gutters pt-8\\\">\\n    <table class=\\\"abhaya-table\\\">\\n      <thead>\\n        <tr>\\n            <th>ID</th>\\n            <th>IMEI No</th>\\n            <th>Vehicle No</th>\\n            <th>IoT No</th>\\n            <th>Status</th>\\n            <th *ngIf=\\\"action == 'vehicleMode'\\\">Vehicle Mode</th>\\n            <th *ngIf=\\\"action == 'ignitionStatus'\\\">Ignition Status</th>\\n            <th *ngIf=\\\"action == 'emergencyStatus'\\\">Emergency Status</th>\\n            <th *ngIf=\\\"action == 'mainPowerStatus'\\\">Main Power Status</th>\\n            <th *ngIf=\\\"action == 'tamperAlert'\\\">Tamper Alert</th>\\n            <th *ngIf=\\\"action == 'memoryPercentage'\\\">Memory Percentage</th>\\n            <th *ngIf=\\\"action == 'batteryPercentage'\\\">Battery Percentage</th>\\n            <th>Latitude</th>\\n            <th>Longitude</th>\\n            <th>Network Date</th>\\n            <th>Network Time</th>\\n            <th>Is Over Speed</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n     <tbody *ngIf=\\\"isDataExists\\\">\\n        <tr *ngFor=\\\"let details of deviceCommunicationData | paginate: { id: 'paginationCtrl', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n            <td>{{details.deviceCommunicationId}}</td>\\n            <td>{{details.imeiNumber}}</td>\\n            <td>{{details.vehicleRegNo}}</td>\\n            <td>{{details.serialNumber}}</td>\\n            <td>{{details.status}}</td>\\n            <td *ngIf=\\\"action == 'vehicleMode'\\\">{{details.vehicleMode}}</td>\\n            <td *ngIf=\\\"action == 'ignitionStatus'\\\">{{details.ignitionStatus == 1 ? 'ON' : 'OFF'}}</td>\\n            <td *ngIf=\\\"action == 'emergencyStatus'\\\">{{details.emergencyStatus == 1 ? 'ON' : 'OFF'}}</td>\\n            <td *ngIf=\\\"action == 'mainPowerStatus'\\\">{{details.mainPowerStatus == 1 ? 'ON' : 'OFF'}}</td>\\n            <td *ngIf=\\\"action == 'tamperAlert'\\\">{{details.tamperAlert == 'O' ? 'ON' : 'OFF'}}</td>\\n            <td *ngIf=\\\"action == 'memoryPercentage'\\\">{{details.memoryPercentage > 40 ? 'Good' : 'Critical'}} ({{details.memoryPercentage}})</td>\\n            <td *ngIf=\\\"action == 'batteryPercentage'\\\">{{details.batteryPercentage > 40 ? 'Good' : 'Critical'}} ({{details.batteryPercentage}})</td>\\n            <td>{{details.latitude}}</td>\\n            <td>{{details.langitude}}</td>\\n            <td>{{details.networkDate}}</td>\\n            <td>{{details.networkTime}}</td>\\n            <td>{{details.isDeviceOverSpeed}}</td>\\n            <td>\\n              <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n              <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                <div class=\\\"arrow-up\\\"></div>\\n                <a (click)=\\\"editDeviceCommunication(details)\\\" class=\\\"dropdown-item\\\">Vehicles List</a>\\n              </div>\\n            </td>\\n          </tr>\\n     </tbody>\\n    </table>\\n    <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n    <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n        <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n            <span>Page Size :</span>\\n            <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n              <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n            </select>\\n          </div>\\n        <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n          <pagination-controls id=\\\"paginationCtrl\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\"\\n            directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n          </pagination-controls>\\n         \\n        </div>\\n      </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvZGV2aWNlY29tbXVuaWNhdGlvbi9kZXZpY2Vjb21tdW5pY2F0aW9uLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CityDristict } from \"../././../../common/models/citydristict.model\";\n\nimport { CitydistrictComponent } from \"../../../common/components/citydistrict/citydistrict.component\";\nimport { DevicesService } from \"../../../common/services/deviceserviceapi\";\nimport { PageModel } from \"../../../common/models/page.model\";\nimport { environment } from '.././../../../environments/environment';\nimport { DatePickerModel } from '../../../common/models/date-picker-model.model';\nimport { EditviewdevicecommComponent } from \"../modalpopup/editviewdevicecomm/editviewdevicecomm.component\";\nimport { deviceCommunicationModel } from \"../../../common/models/device-communication-model\";\n\n@Component({\n  selector: 'app-devicecommunication',\n  templateUrl: './devicecommunication.component.html',\n  styleUrls: ['./devicecommunication.component.sass']\n})\nexport class DevicecommunicationComponent implements OnInit {\n  cityDistrictConfig: CityDristict;\n  cityDistrictCompData: any;\n  parentFormSubmitted: boolean;\n  showFilters: boolean = false;\n  deviceCommunicationData : Array<deviceCommunicationModel>;\n  searchText: string = '';\n  page: PageModel = new PageModel();\n  isDataExists: Boolean = false;\n  pageSizeValues: Array<number> = environment.pageSizeValues;\n  pageSize: Number = environment.pageSize;\n  intilPageNumber: Number = 0;\n  p: Number;\n  datePickerModel: DatePickerModel;\n  searchDate: string = '';\n  districtId: string = '';\n  cityId: string = '';\n  rtoId: string = '';\n  noDataText: string = \"No Device Communication Details Available\";\n  action: string;\n  @ViewChild('validateCityDistrict') private CitydistrictComponent: CitydistrictComponent;\n  private isCityDistrictValid(formValid: any) {\n    this.cityDistrictCompData = formValid;\n  }\n  constructor(private deviceapi: DevicesService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getAllDevices();\n  }\n\n  toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  editDeviceCommunication(seletecdDevice) {\n    const modalRef = this.modalService.open(EditviewdevicecommComponent, {\n      size: 'lg', backdrop: 'static',\n      keyboard: false\n    });\n    modalRef.componentInstance.selectedCommDeviceDetails = seletecdDevice;\n  }\n  changePageSize() {\n    this.getAllDevices();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getAllDevices();\n  }\n\n  applyFilters(parentForm) {\n    this.parentFormSubmitted = true;\n    this.CitydistrictComponent.validateChildForm(this.parentFormSubmitted);\n    if (!parentForm.valid || !this.cityDistrictCompData.isFormValid) {\n      return;\n    }\n    else {\n      this.districtId = this.cityDistrictCompData.districtName;\n      this.cityId = this.cityDistrictCompData.cityName;\n      this.rtoId = this.cityDistrictCompData.rtoOfficeName;\n      this.showFilters = false;\n      this.getAllDevices();\n    }\n\n  }\n  refreshPage(){\n    this.intilPageNumber = 0;\n    this.pageSize = environment.pageSize;\n    this.searchDate = '';\n    this.searchText = '';\n    this.getAllDevices();\n  }\n\n  getAllDevices() {\n    this.deviceapi.getAllDevicesCommunication(this.intilPageNumber, this.pageSize, this.searchDate, this.searchText, this.districtId, this.cityId, this.rtoId)\n      .subscribe((_data: any) => {\n        this.deviceCommunicationData = _data.content;\n        this.page = _data.page;\n        this.isDataExists = (this.deviceCommunicationData.length > 0);\n      });\n  }\n\n}","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n    <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n        <div class=\\\"col-md-5 p-l-0\\\">\\n          <h4>Device Reports</h4>\\n        </div>\\n        \\n        <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n          <nav aria-label=\\\"breadcrumb\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n              <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n              <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/devices']\\\">Devices</a></li>\\n              <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Device Reports</li>\\n            </ol>\\n          </nav>\\n        </div>\\n      </div>\\n      <div class=\\\"row no-gutters m-b-3\\\">\\n         <div class=\\\"col-md-6 p-a-0\\\">\\n            <div class=\\\"form-group abhaya-table-search\\\">\\n              <i class=\\\"icon-ab-search\\\"></i>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getDriverDetails()\\\" placeholder=\\\"Search by Vehicle No./IOT No.\\\">\\n              <span class=\\\"separator\\\"> </span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 p-a-0 text-primary text-right p-t-2\\\">\\n            Total Records : <h5 class=\\\"total-records-text d-inline-block\\\"> {{page.totalElements}}</h5>\\n          </div>\\n         \\n        </div>\\n    <div class=\\\"row no-gutters pt-8\\\">\\n        <table class=\\\"abhaya-table\\\">\\n          <thead>\\n            <tr>\\n              <th>ID</th>\\n              <th>IMEI No</th>\\n              <th>Vehicle Reg No</th>\\n              <th>Serial No</th>\\n              <th>SIM No</th>\\n              <th>IP Address</th>\\n              <th>Date</th>\\n              <th></th>\\n            </tr>\\n          </thead>\\n         <tbody *ngIf=\\\"isDataExists\\\">\\n            <tr *ngFor=\\\"let driver of driverDetails | paginate: { id: 'systemPropertiespage', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n                <td>{{driver.id}}</td>\\n                <td>{{driver.imeiNumber}}</td>\\n                <td>{{driver.vehicleRegNo}}</td>\\n                <td>{{driver.serialNumber}}</td>\\n                <td>{{driver.simNumber}}</td>\\n                <td>{{driver.ipAddress}}</td>\\n                <td>{{driver.createdDate | date : 'dd-MM-yyyy'}}</td>\\n                <td>\\n                    <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n                <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                    <div class=\\\"arrow-up\\\"></div>\\n                    <a (click)=\\\"editDeviceCommunication(details)\\\" class=\\\"dropdown-item\\\">Report Details</a>\\n                  </div>\\n                </td>\\n              </tr>\\n         </tbody>\\n         <!-- <div *ngIf=\\\"!isDataExists\\\">\\n            <div class=\\\"grid-nodata text-center text-red-medium\\\">\\n              <h6>No Data Found</h6>\\n            </div>\\n          </div> -->\\n        </table>  \\n        <!--Pagination-->\\n        <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n        <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n            <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n                <span>Page Size :</span>\\n                <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n                  <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n                </select>\\n              </div>\\n            <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n                <pagination-controls id=\\\"systemPropertiespage\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\"\\n                  maxSize=\\\"6\\\" directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n                </pagination-controls>\\n              </div>\\n          </div>\\n      </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvZGV2aWNlcmVwb3J0L2RldmljZXJlcG9ydC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { deviceDetailsModel } from '../../../common/models/device-details-model';\nimport { environment } from '../../../../environments/environment';\nimport { PageModel } from \"../../../common/models/page.model\";\n\n@Component({\n  selector: 'app-devicereport',\n  templateUrl: './devicereport.component.html',\n  styleUrls: ['./devicereport.component.sass']\n})\nexport class DevicereportComponent implements OnInit {\n\n  constructor() { }\n  driverDetails : Array<deviceDetailsModel> = []; //driversModel;\n  pageSizeValues = [10, 50, 100, 200];\n  pageSize: Number = environment.pageSize;\n  intilPageNumber: Number = 0;\n  isDataExists: Boolean = false;\n  page: PageModel = new PageModel();\n  searchDate: string;\n  searchText: string = '';\n  p: Number;\n\n  ngOnInit() {\n    this.getDriverDetails();\n  }\n\n  getDriverDetails() {\n    \n  }\n\n  changePageSize() {\n    this.getDriverDetails();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getDriverDetails();\n  }\n\n}\n","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n  <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n    <div class=\\\"col-md-6 p-l-0\\\">\\n      <h4>Device Details</h4>\\n    </div>\\n    <div class=\\\"col-md-5 text-right\\\">\\n        <span class=\\\"btn-circle\\\"><i class=\\\"icon-ab_download\\\"></i></span>\\n        <span class=\\\"btn-circle m-r-1\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"icon-ab-refresh\\\"></i></span>\\n    </div>\\n    <div class=\\\"col-md-1 p-r-0 text-right\\\">\\n      <div class=\\\"filters\\\">\\n        <button type=\\\"button\\\" class=\\\"filters-button\\\" [ngClass]=\\\"{ 'active': showFilters}\\\" (click)=\\\"toggleFilters()\\\">\\n          <i class=\\\"icon-ab-searchfilter\\\"></i>\\n          <span>Filters</span>\\n        </button>\\n        <div class=\\\"filters-body \\\" *ngIf=\\\"showFilters\\\">\\n          <div class=\\\"arrow-up\\\"></div>\\n          <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && applyFilters(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n            <app-citydistrict #validateCityDistrict (isCityDistrictValid)=\\\"isCityDistrictValid($event)\\\"\\n              [cityDistrictConfig]='cityDistrictConfig'></app-citydistrict>\\n\\n            <div class=\\\"form-group\\\">\\n              <label>DATE</label>\\n              <app-datepicker class=\\\"form-control bdr-none p-a-0\\\" name=\\\"searchDate\\\" [(ngModel)]=\\\"searchDate\\\"\\n                #searchDatectrl=\\\"ngModel\\\" appForbiddenName=\\\"fred\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && searchDatectrl.invalid }\\\"\\n                [datePickerModel]=\\\"datePickerModel\\\" searchDatectrl>\\n              </app-datepicker>\\n              <div *ngIf=\\\"f.submitted && searchDatectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"searchDatectrl.errors.required\\\">Search Date is required</div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group m-t-3\\\">\\n              <button class=\\\"btn btn-primary w-100p\\\" type=\\\"submit\\\">Search</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Device Details</li>\\n        </ol>\\n      </nav>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row no-gutters m-b-3\\\">\\n      <div class=\\\"col-md-6 p-a-0\\\">\\n          <div class=\\\"form-group abhaya-table-search focal-point\\\">\\n            <i class=\\\"icon-ab-search\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getAllDevices()\\\"\\n              placeholder=\\\"Search IMEI / Vehicle / SIM / IoT No.\\\">\\n            <span class=\\\"separator\\\"> </span>\\n          </div>\\n        </div>\\n    <div class=\\\"col-md-6 p-a-0 text-primary text-right p-t-2\\\">\\n      Total Records : <h5 class=\\\"total-records-text d-inline-block\\\"> {{page.totalElements}}</h5>\\n    </div>\\n   \\n  </div>\\n\\n  <div class=\\\"row no-gutters pt-8\\\">\\n    <table class=\\\"abhaya-table\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>IMEI No</th>\\n          <th>Vehicle No</th>\\n          <th>IoT No</th>\\n          <th>SIM No</th>\\n          <th>IP Address</th>\\n          <th>Date</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"isDataExists\\\">\\n        <tr\\n          *ngFor=\\\"let details of deviceData | paginate: { id: 'paginationCtrl', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n          <td>{{details.id}}</td>\\n          <td>{{details.imeiNumber}}</td>\\n          <td>{{details.vehicleRegNo}}</td>\\n          <td>{{details.serialNumber}}</td>\\n          <td>{{details.simNumber}}</td>\\n          <td>{{details.ipAddress}}</td>\\n          <td>{{details.createdDate}}</td>\\n          <td>\\n            <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n              aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n              <div class=\\\"arrow-up\\\"></div>\\n              <a (click)=\\\"editviewdevices(details, 'view')\\\" class=\\\"dropdown-item\\\">View Details</a>\\n              <a (click)=\\\"editviewdevices(details, 'edit')\\\" class=\\\"dropdown-item\\\">Edit Details</a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n    <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n        <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n            <span>Page Size :</span>\\n            <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n              <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n            </select>\\n          </div>\\n      <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n        <pagination-controls id=\\\"paginationCtrl\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\"\\n          maxSize=\\\"6\\\" directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n        </pagination-controls>\\n     \\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvZGV2aWNlcy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CityDristict } from \"././../../common/models/citydristict.model\";\n\nimport { CitydistrictComponent } from \"../../common/components/citydistrict/citydistrict.component\";\nimport { DevicesService } from \"../../common/services/deviceserviceapi\";\nimport { PageModel } from \"../../common/models/page.model\";\nimport { environment } from './../../../environments/environment';\nimport { DatePickerModel } from '../../common/models/date-picker-model.model';\nimport { EditviewdevicesComponent } from \"./modalpopup/editviewdevices/editviewdevices.component\";\n\n@Component({\n  selector: 'app-devices',\n  templateUrl: './devices.component.html',\n  styleUrls: ['./devices.component.sass']\n})\nexport class DevicesComponent implements OnInit {\n  cityDistrictConfig: CityDristict;\n  cityDistrictCompData: any;\n  parentFormSubmitted: boolean;\n  showFilters: boolean = false;\n  deviceData; //Need to create the model\n  searchText: string = '';\n  page: PageModel = new PageModel();\n  isDataExists: Boolean = false;\n  pageSizeValues: Array<number> = environment.pageSizeValues;\n  pageSize: Number = environment.pageSize;\n  intilPageNumber: Number = 0;\n  p: Number;\n  datePickerModel: DatePickerModel;\n  searchDate: string = '';\n  districtId: string = '';\n  cityId: string = '';\n  rtoId: string = '';\n  noDataText: string = 'No Device Details Available';\n  @ViewChild('validateCityDistrict') private CitydistrictComponent: CitydistrictComponent;\n  private isCityDistrictValid(formValid: any) {\n    this.cityDistrictCompData = formValid;\n  }\n  constructor(private deviceapi: DevicesService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getAllDevices();\n  }\n\n  toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  editviewdevices(deviceDetails, eventType) {\n    deviceDetails.selectedEvent = eventType;\n    const modalRef = this.modalService.open(EditviewdevicesComponent, {\n      size: 'lg', backdrop: 'static',\n      keyboard: false\n    });\n    modalRef.componentInstance.selectedDeviceDetails = deviceDetails;\n    modalRef.result.then((result) => {\n      if (result === 'refreshContent') {\n        this.intilPageNumber = 0;\n        this.getAllDevices();\n        this.p = 1;\n\n      }\n    })\n  }\n  changePageSize() {\n    this.getAllDevices();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getAllDevices();\n  }\n\n  applyFilters(parentForm) {\n    this.parentFormSubmitted = true;\n    this.CitydistrictComponent.validateChildForm(this.parentFormSubmitted);\n    if (!parentForm.valid || !this.cityDistrictCompData.isFormValid) {\n      return;\n    }\n    else {\n      this.districtId = this.cityDistrictCompData.districtName;\n      this.cityId = this.cityDistrictCompData.cityName;\n      this.rtoId = this.cityDistrictCompData.rtoOfficeName;\n      this.showFilters = false;\n      this.getAllDevices();\n    }\n\n  }\n  refreshPage(){\n    this.intilPageNumber = 0;\n    this.pageSize = environment.pageSize;\n    this.searchDate = '';\n    this.searchText = '';\n    this.districtId = '';\n    this.cityId = '';\n    this.getAllDevices();\n  }\n  getAllDevices() {\n    this.deviceapi.getAllDevices(this.intilPageNumber, this.pageSize, this.searchDate, this.searchText, this.districtId, this.cityId, this.rtoId)\n      .subscribe((_data: any) => {\n        this.deviceData = _data.content;\n        this.page = _data.page;\n        this.isDataExists = (this.deviceData.length > 0);\n      });\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BsDatepickerModule } from 'ngx-bootstrap';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CoreModule } from \"../core/core.module\";\n\nimport { DevicesComponent } from './devices.component';\nimport { DevicesRoutingModule } from \"./devicesRoutingModule\";\nimport { DevicereportComponent } from './devicereport/devicereport.component';\nimport { DevicecommunicationComponent } from './devicecommunication/devicecommunication.component';\nimport { MovementComponent } from './movement/movement.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { RawdataComponent } from './rawdata/rawdata.component';\nimport { LocationmonitoringComponent } from './locationmonitoring/locationmonitoring.component';\nimport { EmergencymonitoringComponent } from './emergencymonitoring/emergencymonitoring.component';\nimport { HealthmonitoringComponent } from './healthmonitoring/healthmonitoring.component';\n\nimport { EditviewdevicesComponent } from \"./modalpopup/editviewdevices/editviewdevices.component\";\nimport { EditviewdevicecommComponent } from \"./modalpopup/editviewdevicecomm/editviewdevicecomm.component\";\nimport { EditviewmovementComponent } from \"./modalpopup/editviewmovement/editviewmovement.component\";\nimport { EditviewemergencyComponent } from \"./modalpopup/editviewemergency/editviewemergency.component\";\nimport { EditviewhealthComponent } from \"./modalpopup/editviewhealth/editviewhealth.component\";\nimport { EditviewrawdataComponent } from \"./modalpopup/editviewrawdata/editviewrawdata.component\";\n\n@NgModule({\n  declarations: [DevicesComponent,\n    DevicereportComponent,\n    DevicecommunicationComponent,\n    MovementComponent,\n    RawdataComponent,\n    LocationmonitoringComponent,\n    EmergencymonitoringComponent,\n    HealthmonitoringComponent,\n    EditviewdevicesComponent,\n    EditviewdevicecommComponent,\n    EditviewmovementComponent,\n    EditviewemergencyComponent,\n    EditviewhealthComponent,\n    EditviewrawdataComponent\n  ],\n  imports: [\n    CommonModule,\n    DevicesRoutingModule,\n    NgxPaginationModule,\n    FormsModule,\n    BsDatepickerModule.forRoot(),\n    NgbModule,\n    CoreModule\n  ],\n  entryComponents : [\n    EditviewdevicesComponent,\n    EditviewdevicecommComponent,\n    EditviewmovementComponent,\n    EditviewemergencyComponent,\n    EditviewhealthComponent,\n    EditviewrawdataComponent\n  ],\n})\nexport class DevicesModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DevicesComponent } from \"./devices.component\";\r\nimport { DevicereportComponent } from \"./devicereport/devicereport.component\";\r\nimport { DevicecommunicationComponent } from \"./devicecommunication/devicecommunication.component\";\r\nimport { MovementComponent } from \"./movement/movement.component\";\r\nimport { RawdataComponent } from \"./rawdata/rawdata.component\";\r\nimport { LocationmonitoringComponent } from \"./locationmonitoring/locationmonitoring.component\";\r\nimport { EmergencymonitoringComponent } from \"./emergencymonitoring/emergencymonitoring.component\";\r\nimport { HealthmonitoringComponent } from \"./healthmonitoring/healthmonitoring.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: DevicesComponent, },\r\n    { path: 'devicereport', component: DevicereportComponent, },\r\n    { path: 'communication', component: DevicecommunicationComponent, },\r\n    { path: 'movement', component: MovementComponent, },\r\n    { path: 'rawdata', component: RawdataComponent, },\r\n    { path: 'locationmonitoring', component: LocationmonitoringComponent, },\r\n    { path: 'emergencymonitoring', component: EmergencymonitoringComponent, },\r\n    { path: 'healthmonitoring', component: HealthmonitoringComponent, }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DevicesRoutingModule { }\r\n","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n  <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n    <div class=\\\"col-md-6 p-l-0\\\">\\n      <h4>Emergency Monitoring</h4>\\n    </div>\\n    <div class=\\\"col-md-5 text-right\\\">\\n        <span class=\\\"btn-circle\\\"><i class=\\\"icon-ab_download\\\"></i></span>\\n        <span class=\\\"btn-circle m-r-1\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"icon-ab-refresh\\\"></i></span>\\n    </div>\\n    <div class=\\\"col-md-1 p-r-0 text-right\\\">\\n      <div class=\\\"filters\\\">\\n        <button type=\\\"button\\\" class=\\\"filters-button\\\" [ngClass]=\\\"{ 'active': showFilters}\\\" (click)=\\\"toggleFilters()\\\">\\n          <i class=\\\"icon-ab-searchfilter\\\"></i>\\n          <span>Filters</span>\\n        </button>\\n        <div class=\\\"filters-body \\\" *ngIf=\\\"showFilters\\\">\\n          <div class=\\\"arrow-up\\\"></div>\\n          <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && applyFilters(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n            <app-citydistrict #validateCityDistrict (isCityDistrictValid)=\\\"isCityDistrictValid($event)\\\"\\n              [cityDistrictConfig]='cityDistrictConfig'></app-citydistrict>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">DATE</label>\\n              <app-datepicker class=\\\"form-control bdr-none p-a-0\\\" name=\\\"searchDate\\\" [(ngModel)]=\\\"searchDate\\\"\\n                #searchDatectrl=\\\"ngModel\\\" appForbiddenName=\\\"fred\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && searchDatectrl.invalid }\\\" required\\n                [datePickerModel]=\\\"datePickerModel\\\" searchDatectrl>\\n              </app-datepicker>\\n              <div *ngIf=\\\"f.submitted && searchDatectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"searchDatectrl.errors.required\\\">BOD is required</div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group m-t-3\\\">\\n              <button class=\\\"btn btn-primary w-100p\\\" type=\\\"submit\\\">Search</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/devices']\\\">Devices</a>\\n          </li>\\n          <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Emergency Monitoring</li>\\n        </ol>\\n      </nav>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row no-gutters m-b-3\\\">\\n      <div class=\\\"col-md-6 p-a-0\\\">\\n          <div class=\\\"form-group abhaya-table-search focal-point\\\">\\n            <i class=\\\"icon-ab-search\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getEmergendyData()\\\"\\n              placeholder=\\\"Search by IMEI / Vehicle No.\\\">\\n            <span class=\\\"separator\\\"> </span>\\n          </div>\\n        </div>\\n    <div class=\\\"col-md-6 p-a-0 text-primary text-right p-t-2\\\">\\n      Total Records : <h5 class=\\\"total-records-text d-inline-block\\\"> {{page.totalElements}}</h5>\\n    </div>\\n   \\n  </div>\\n\\n  <div class=\\\"row no-gutters pt-8\\\">\\n    <table class=\\\"abhaya-table\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>IMEI No</th>\\n          <th>Vehicle No</th>\\n          <th>Latitude</th>\\n          <th>Longitude</th>\\n          <th>Network Date</th>\\n          <th>Network Time</th>\\n          <th>Reply No</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"isDataExists\\\">\\n        <tr\\n          *ngFor=\\\"let details of emergencyDetails | paginate: { id: 'paginationCtrl', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n          <td>{{details.ebpPacketDataId}}</td>\\n          <td>{{details.imeiNumber}}</td>\\n          <td>{{details.vehicleRegNo}}</td>\\n          <td>{{details.latitude}}</td>\\n          <td>{{details.longitude}}</td>\\n          <td>{{details.networkDate}}</td>\\n          <td>{{details.networkTime}}</td>\\n          <td>{{details.replyNumber}}</td>\\n          <td>\\n            <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n              aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n              <div class=\\\"arrow-up\\\"></div>\\n              <a (click)=\\\"ViewEmergancy(details)\\\" class=\\\"dropdown-item\\\">View Details</a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n    <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n        <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n            <span>Page Size :</span>\\n            <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n              <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n            </select>\\n          </div>\\n      <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n        <pagination-controls id=\\\"paginationCtrl\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\"\\n          maxSize=\\\"6\\\" directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n        </pagination-controls>\\n       \\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvZW1lcmdlbmN5bW9uaXRvcmluZy9lbWVyZ2VuY3ltb25pdG9yaW5nLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CityDristict } from \"../././../../common/models/citydristict.model\";\nimport { CitydistrictComponent } from \"../../../common/components/citydistrict/citydistrict.component\";\nimport { DevicesService } from \"../../../common/services/deviceserviceapi\";\nimport { PageModel } from \"../../../common/models/page.model\";\nimport { environment } from '.././../../../environments/environment';\nimport { DatePickerModel } from '../../../common/models/date-picker-model.model';\nimport { EmergencyModel } from \"../../../common/models/emergencymonitoring.model\";\nimport { PaginationModel } from \"../../../common/models/pagination.model\";\nimport { EditviewemergencyComponent } from \"../modalpopup/editviewemergency/editviewemergency.component\";\n\n@Component({\n  selector: 'app-emergencymonitoring',\n  templateUrl: './emergencymonitoring.component.html',\n  styleUrls: ['./emergencymonitoring.component.sass']\n})\nexport class EmergencymonitoringComponent implements OnInit {\n  cityDistrictConfig: CityDristict;\n  cityDistrictCompData : any;\n  parentFormSubmitted: boolean;\n  showFilters: boolean = false;\n  emergencyDetails : Array<EmergencyModel>;\n  searchText: string = '';\n  page: PageModel = new PageModel();\n  isDataExists: Boolean = false;\n  pageSizeValues: Array<number> = environment.pageSizeValues;\n  pageSize: Number = environment.pageSize;\n  intilPageNumber: Number = 0;\n  p: Number;\n  datePickerModel:DatePickerModel;\n  searchDate: string;\n  noDataText : string = 'No Emergency Data Available';\n  @ViewChild('validateCityDistrict') private CitydistrictComponent: CitydistrictComponent;\n  private isCityDistrictValid(formValid: any) {\n    this.cityDistrictCompData = formValid;\n  }\n  constructor(private deviceapi: DevicesService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.searchDate = '';\n    this.getEmergendyData();\n  }\n\n  toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  ViewEmergancy(emergancyData){\n  const modalRef = this.modalService.open(EditviewemergencyComponent, {\n    size: 'lg', backdrop: 'static',\n    keyboard: false\n});\nmodalRef.componentInstance.selectedEmergencydata = emergancyData;\n}\n  changePageSize() {\n    this.getEmergendyData();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getEmergendyData();\n}\n\napplyFilters(parentForm) {\n    this.parentFormSubmitted = true;\n    this.CitydistrictComponent.validateChildForm(this.parentFormSubmitted);\n    if (!parentForm.valid || !this.cityDistrictCompData.isFormValid) {\n      return;\n    }\n    else {\n      this.showFilters = false;\n      this.getEmergendyData();\n    }\n    \n  }\n  refreshPage(){\n    this.intilPageNumber = 0;\n    this.pageSize = environment.pageSize;\n    this.searchDate = '';\n    this.searchText = '';\n    this.getEmergendyData();\n  }\n  getEmergendyData() {\n    this.deviceapi.getemergancyDetails(this.intilPageNumber, this.pageSize, this.searchDate, this.searchText)\n      .subscribe((_data: PaginationModel) => {\n        this.emergencyDetails = _data.content;\n        this.page = _data.page;\n        this.isDataExists = (this.emergencyDetails.length > 0);\n      });\n  }\n\n}\n\n","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n  <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n    <div class=\\\"col-md-6 p-l-0\\\">\\n      <h4>Health Monitoring</h4>\\n    </div>\\n    <div class=\\\"col-md-5 text-right\\\">\\n        <span class=\\\"btn-circle\\\"><i class=\\\"icon-ab_download\\\"></i></span>\\n        <span class=\\\"btn-circle m-r-1\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"icon-ab-refresh\\\"></i></span>\\n    </div>\\n    <div class=\\\"col-md-1 p-r-0 text-right\\\">\\n      <div class=\\\"filters\\\">\\n        <button type=\\\"button\\\" class=\\\"filters-button\\\" [ngClass]=\\\"{ 'active': showFilters}\\\" (click)=\\\"toggleFilters()\\\">\\n          <i class=\\\"icon-ab-searchfilter\\\"></i>\\n          <span>Filters</span>\\n        </button>\\n        <div class=\\\"filters-body \\\" *ngIf=\\\"showFilters\\\">\\n          <div class=\\\"arrow-up\\\"></div>\\n          <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && applyFilters(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n            <app-citydistrict #validateCityDistrict (isCityDistrictValid)=\\\"isCityDistrictValid($event)\\\"\\n              [cityDistrictConfig]='cityDistrictConfig'></app-citydistrict>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"email\\\">DATE</label>\\n                  <app-datepicker\\n                      class=\\\"form-control bdr-none p-a-0\\\"\\n                      name=\\\"searchDate\\\" \\n                      [(ngModel)]=\\\"searchDate\\\"\\n                      #searchDatectrl= \\\"ngModel\\\"\\n                      appForbiddenName=\\\"fred\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && searchDatectrl.invalid }\\\"\\n                      required \\n                      [datePickerModel]=\\\"datePickerModel\\\"          \\n                      searchDatectrl>\\n                  </app-datepicker>\\n               <div *ngIf=\\\"f.submitted && searchDatectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"searchDatectrl.errors.required\\\">BOD is required</div>\\n               </div>\\n              </div>\\n            <div class=\\\"form-group m-t-3\\\">\\n              <button class=\\\"btn btn-primary w-100p\\\" type=\\\"submit\\\">Search</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/devices']\\\">Devices</a></li>\\n          <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Health Monitoring</li>\\n        </ol>\\n      </nav>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row no-gutters m-b-3\\\">\\n      <div class=\\\"col-md-6 p-a-0\\\">\\n          <div class=\\\"form-group abhaya-table-search focal-point\\\">\\n            <i class=\\\"icon-ab-search\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getHealthData()\\\" placeholder=\\\"Search by IMEI Number\\\">\\n            <span class=\\\"separator\\\"> </span>\\n          </div>\\n        </div>\\n    <div class=\\\"col-md-6 p-a-0 text-primary text-right p-t-2\\\">\\n      Total Records : <h5 class=\\\"total-records-text d-inline-block\\\"> {{page.totalElements}}</h5>\\n    </div>\\n  \\n  </div>\\n\\n  <div class=\\\"row no-gutters pt-8\\\">\\n    <table class=\\\"abhaya-table\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n            <th>IMEI No</th>\\n            <th>Battery %</th>\\n            <th>Digital IO Status</th>\\n            <th>Low Battery Thr Value</th>\\n            <th>Memory %</th>\\n            <th>Network Date</th>\\n            <th>Network Time</th>\\n            <th>Vendor ID</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n     <tbody *ngIf=\\\"isDataExists\\\">\\n        <tr *ngFor=\\\"let details of healthDetails | paginate: { id: 'paginationCtrl', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n          <td>{{details.hmpPacketDataId}}</td>\\n          <td>{{details.imeiNumber}}</td>\\n          <td>{{details.batteryPercentage}}</td>\\n          <td>{{details.digitalIOStatus}}</td>\\n          <td>{{details.lowBatteryThrValue}}</td>\\n          <td>{{details.memoryPercentage}}</td>\\n          <td>{{details.networkDate}}</td>\\n          <td>{{details.networkTime}}</td>\\n          <td>{{details.vendorId}}</td>\\n            <td>\\n              <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n              <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                <div class=\\\"arrow-up\\\"></div>\\n                <a (click)=\\\"viewHealthDetails(details)\\\" class=\\\"dropdown-item\\\">View Details</a>\\n              </div>\\n            </td>\\n          </tr>\\n     </tbody>\\n    </table>\\n    <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n    <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n        <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n            <span>Page Size :</span>\\n            <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n              <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n            </select>\\n          </div>\\n        <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n          <pagination-controls id=\\\"paginationCtrl\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\"\\n            directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n          </pagination-controls>\\n         \\n        </div>\\n      </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvaGVhbHRobW9uaXRvcmluZy9oZWFsdGhtb25pdG9yaW5nLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CityDristict } from \"../././../../common/models/citydristict.model\";\nimport { CitydistrictComponent } from \"../../../common/components/citydistrict/citydistrict.component\";\nimport { DevicesService } from \"../../../common/services/deviceserviceapi\";\nimport { PageModel } from \"../../../common/models/page.model\";\nimport { environment } from '.././../../../environments/environment';\nimport { DatePickerModel } from '../../../common/models/date-picker-model.model';\nimport { HealthModel } from \"../../../common/models/healthmonitoring.model\";\nimport { PaginationModel } from \"../../../common/models/pagination.model\";\nimport { EditviewhealthComponent } from \"../modalpopup/editviewhealth/editviewhealth.component\";\n\n@Component({\n  selector: 'app-healthmonitoring',\n  templateUrl: './healthmonitoring.component.html',\n  styleUrls: ['./healthmonitoring.component.sass']\n})\nexport class HealthmonitoringComponent implements OnInit {\n  cityDistrictConfig: CityDristict;\n  cityDistrictCompData: any;\n  parentFormSubmitted: boolean;\n  showFilters: boolean = false;\n  healthDetails: Array<HealthModel>;\n  searchText: string = '';\n  page: PageModel = new PageModel();\n  isDataExists: Boolean = false;\n  pageSizeValues: Array<number> = environment.pageSizeValues;\n  pageSize: Number = environment.pageSize;\n  intilPageNumber: Number = 0;\n  p: Number;\n  datePickerModel: DatePickerModel;\n  searchDate: string;\n  noDataText: string = 'No Health Monitoring Details Available';\n  @ViewChild('validateCityDistrict') private CitydistrictComponent: CitydistrictComponent;\n  private isCityDistrictValid(formValid: any) {\n    this.cityDistrictCompData = formValid;\n  }\n  constructor(private deviceapi: DevicesService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.searchDate = '';\n    this.getHealthData();\n  }\n\n  toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  viewHealthDetails(healthDetails) {\n    const modalRef = this.modalService.open(EditviewhealthComponent, {\n      size: 'lg', backdrop: 'static',\n      keyboard: false\n    });\n    modalRef.componentInstance.selectedHealthDetails = healthDetails;\n  }\n  changePageSize() {\n    this.getHealthData();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getHealthData();\n  }\n\n  applyFilters(parentForm) {\n    this.parentFormSubmitted = true;\n    this.CitydistrictComponent.validateChildForm(this.parentFormSubmitted);\n    if (!parentForm.valid || !this.cityDistrictCompData.isFormValid) {\n      return;\n    }\n    else {\n      this.showFilters = false;\n      this.getHealthData();\n    }\n\n  }\n  refreshPage(){\n    this.intilPageNumber = 0;\n    this.pageSize = environment.pageSize;\n    this.searchDate = '';\n    this.searchText = '';\n    this.getHealthData();\n  }\n  getHealthData() {\n    this.deviceapi.getHealthData(this.intilPageNumber, this.pageSize, this.searchDate, this.searchText)\n      .subscribe((_data: PaginationModel) => {\n        this.healthDetails = _data.content;\n        this.page = _data.page;\n        this.isDataExists = (this.healthDetails.length > 0);\n      });\n  }\n\n}","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n  <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n    <div class=\\\"col-md-6 p-l-0\\\">\\n      <h4>Location Details</h4>\\n    </div>\\n    <div class=\\\"col-md-5 text-right\\\">\\n        <span class=\\\"m-r-2 btn-circle\\\"><i class=\\\"icon-ab_download\\\"></i></span>\\n        <span (click)=\\\"refreshPage()\\\" class=\\\"btn-circle\\\"><i class=\\\"icon-ab-refresh\\\"></i></span>\\n      </div>\\n    <div class=\\\"col-md-1 p-r-0 text-right\\\">\\n      <div class=\\\"filters\\\">\\n        <button type=\\\"button\\\" class=\\\"filters-button\\\" [ngClass]=\\\"{ 'active': showFilters}\\\" (click)=\\\"toggleFilters()\\\">\\n          <i class=\\\"icon-ab-searchfilter\\\"></i>\\n          <span>Filters</span>\\n        </button>\\n        <div class=\\\"filters-body \\\" *ngIf=\\\"showFilters\\\">\\n          <div class=\\\"arrow-up\\\"></div>\\n          <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && applyFilters(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n            <app-citydistrict #validateCityDistrict (isCityDistrictValid)=\\\"isCityDistrictValid($event)\\\"\\n              [cityDistrictConfig]='cityDistrictConfig'></app-citydistrict>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">DATE</label>\\n              <app-datepicker class=\\\"form-control bdr-none p-a-0\\\" name=\\\"searchDate\\\" [(ngModel)]=\\\"searchDate\\\"\\n                #searchDatectrl=\\\"ngModel\\\" appForbiddenName=\\\"fred\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && searchDatectrl.invalid }\\\" required\\n                [datePickerModel]=\\\"datePickerModel\\\" searchDatectrl>\\n              </app-datepicker>\\n              <div *ngIf=\\\"f.submitted && searchDatectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"searchDatectrl.errors.required\\\">BOD is required</div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group m-t-3\\\">\\n              <button class=\\\"btn btn-primary w-100p\\\" type=\\\"submit\\\">Search</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/devices']\\\">Devices</a></li>\\n          <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Location Details</li>\\n        </ol>\\n      </nav>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row no-gutters m-b-3\\\">\\n      <div class=\\\"col-md-4 p-a-0\\\">\\n          <div class=\\\"form-group w-88p abhaya-table-search focal-point\\\">\\n            <i class=\\\"icon-ab-search\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getLocationData()\\\"\\n              placeholder=\\\"Search by IMEI / Vehicle No.\\\">\\n            <span class=\\\"separator\\\"> </span>\\n          </div>\\n        </div>\\n    <div class=\\\"col-md-8 p-a-0 text-right text-primary p-t-2\\\">\\n      Total Records : <h5 class=\\\"total-records-text d-inline-block\\\"> {{page.totalElements}}</h5>\\n    </div>\\n    \\n\\n  </div>\\n\\n  <div class=\\\"row no-gutters pt-8\\\">\\n    <table class=\\\"abhaya-table\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>IMEI No</th>\\n          <th>Vehicle No</th>\\n          <th>Vendor ID</th>\\n          <th>Latitude</th>\\n          <th>Longitude</th>\\n          <th>Network Date</th>\\n          <th>Network Time</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"isDataExists\\\">\\n        <tr\\n          *ngFor=\\\"let details of locationDetails | paginate: { id: 'paginationCtrl', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n          <td>{{details.id}}</td>\\n            <td>{{details.imei}}</td>\\n            <td>{{details.vehicleRegNo}}</td>\\n            <td>{{details.vendorId}}</td>\\n            <td>{{details.latitude}}</td>\\n            <td>{{details.longitude}}</td>\\n            <td>{{details.networkDate}}</td>\\n            <td>{{details.networkTime}}</td>\\n          <td>\\n            <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n              aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n              <div class=\\\"arrow-up\\\"></div>\\n              <a (click)=\\\"editviewLocation(details)\\\" class=\\\"dropdown-item\\\">View Details</a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n    <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n        <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n            <span>Page Size :</span>\\n            <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n              <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n            </select>\\n          </div>\\n      <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n        <pagination-controls id=\\\"paginationCtrl\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\"\\n          maxSize=\\\"6\\\" directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n        </pagination-controls>\\n     \\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvbG9jYXRpb25tb25pdG9yaW5nL2xvY2F0aW9ubW9uaXRvcmluZy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CityDristict } from \"../././../../common/models/citydristict.model\";\n\nimport { CitydistrictComponent } from \"../../../common/components/citydistrict/citydistrict.component\";\nimport { DevicesService } from \"../../../common/services/deviceserviceapi\";\nimport { PageModel } from \"../../../common/models/page.model\";\nimport { environment } from '.././../../../environments/environment';\nimport { DatePickerModel } from '../../../common/models/date-picker-model.model';\nimport { EditviewLocationComponent } from \"../modalpopup/editview-location/editview-location.component\";\nimport { LocationModel } from \"../../../common/models/locationmonitoring.model\";\nimport { PaginationModel } from \"../../../common/models/pagination.model\";\n\n@Component({\n  selector: 'app-locationmonitoring',\n  templateUrl: './locationmonitoring.component.html',\n  styleUrls: ['./locationmonitoring.component.sass']\n})\nexport class LocationmonitoringComponent implements OnInit {\n  cityDistrictConfig: CityDristict;\n  cityDistrictCompData: any;\n  parentFormSubmitted: boolean;\n  showFilters: boolean = false;\n  locationDetails: Array<LocationModel>;\n  searchText: string = '';\n  page: PageModel = new PageModel();\n  isDataExists: Boolean = false;\n  pageSizeValues: Array<number> = environment.pageSizeValues;\n  pageSize: Number = environment.pageSize;\n  intilPageNumber: Number = 0;\n  p: Number;\n  datePickerModel: DatePickerModel;\n  searchDate: string = '';\n  noDataText: string = \"No Location Details Available\";\n  @ViewChild('validateCityDistrict') private CitydistrictComponent: CitydistrictComponent;\n  private isCityDistrictValid(formValid: any) {\n    this.cityDistrictCompData = formValid;\n  }\n  constructor(private deviceapi: DevicesService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getLocationData();\n  }\n\n  toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  editviewLocation(locationDetail) {\n    const modalRef = this.modalService.open(EditviewLocationComponent, {\n      size: 'lg', backdrop: 'static',\n      keyboard: false\n    });\n    modalRef.componentInstance.selectedLocationDetails = locationDetail;\n  }\n  changePageSize() {\n    this.getLocationData();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getLocationData();\n  }\n\n  applyFilters(parentForm) {\n    this.parentFormSubmitted = true;\n    this.CitydistrictComponent.validateChildForm(this.parentFormSubmitted);\n    if (!parentForm.valid || !this.cityDistrictCompData.isFormValid) {\n      return;\n    }\n    else {\n      this.showFilters = false;\n      this.getLocationData();\n    }\n\n  }\n\n  refreshPage(){\n    this.intilPageNumber = 0;\n    this.pageSize = environment.pageSize;\n    this.searchDate = '';\n    this.searchText = '';\n    this.getLocationData();\n  }\n  getLocationData() {\n    this.deviceapi.getLocationData(this.intilPageNumber, this.pageSize, this.searchDate, this.searchText)\n      .subscribe((_data: PaginationModel) => {\n        this.locationDetails = _data.content;\n        this.page = _data.page;\n        this.isDataExists = (this.locationDetails.length > 0);\n      });\n  }\n\n}\n\n\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Device Communication Details of {{selectedCommDeviceDetails.imeiNumber}}</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close('refreshContent')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body p-r-2\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <h5>ID No</h5>\\n      <h4>{{selectedCommDeviceDetails.deviceCommunicationId}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>IMEIumber</h5>\\n      <h4>{{selectedCommDeviceDetails.imeiNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Longitude</h5>\\n      <h4>{{selectedCommDeviceDetails.langitude}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Latitude</h5>\\n      <h4>{{selectedCommDeviceDetails.latitude}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Engine Status</h5>\\n      <h4>{{selectedCommDeviceDetails.engineStatus}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Ignition Status</h5>\\n      <h4>{{selectedCommDeviceDetails.ignitionStatus}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Network Date</h5>\\n      <h4>{{selectedCommDeviceDetails.networkDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Prev Langitude</h5>\\n      <h4>{{selectedCommDeviceDetails.prevLangitude}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Prev Latitude</h5>\\n      <h4>{{selectedCommDeviceDetails.prevLatitude}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Created Date</h5>\\n      <h4>{{selectedCommDeviceDetails.createdDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Location</h5>\\n      <h4>{{selectedCommDeviceDetails.location}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Prev Network Date</h5>\\n      <h4>{{selectedCommDeviceDetails.prevNetworkDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Prev Network Time</h5>\\n      <h4>{{selectedCommDeviceDetails.prevNetworkTime}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Panic Status</h5>\\n      <h4>{{selectedCommDeviceDetails.emergencyStatus}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Tamper Status</h5>\\n      <h4>{{selectedCommDeviceDetails.tamperAlert}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Status</h5>\\n      <h4>{{selectedCommDeviceDetails.status}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Is Over Speed</h5>\\n      <h4>{{selectedCommDeviceDetails.isDeviceOverSpeed}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Updated Date</h5>\\n      <h4>{{selectedCommDeviceDetails.updatedDate}}</h4>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvbW9kYWxwb3B1cC9lZGl0dmlld2RldmljZWNvbW0vZWRpdHZpZXdkZXZpY2Vjb21tLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { deviceCommunicationModel } from '../../../../common/models/device-communication-model';\n\n@Component({\n  selector: 'app-editviewdevicecomm',\n  templateUrl: './editviewdevicecomm.component.html',\n  styleUrls: ['./editviewdevicecomm.component.sass']\n})\nexport class EditviewdevicecommComponent implements OnInit {\n\n  constructor(public activeModal: NgbActiveModal) { }\n  \n  @Input() selectedCommDeviceDetails : deviceCommunicationModel;\n\n  ngOnInit() { \n  }\n\n}","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">{{pageTitle}}</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close('refreshContent')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body p-r-2\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"viewDetails\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <h5>ID</h5>\\n      <h4>{{selectedDeviceDetails.id}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>IMEI Number</h5>\\n      <h4>{{selectedDeviceDetails.imeiNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>IMSI Number</h5>\\n      <h4>{{selectedDeviceDetails.imsiNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Serial Number</h5>\\n      <h4>{{selectedDeviceDetails.serialNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Sim number</h5>\\n      <h4>{{selectedDeviceDetails.simNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Vehicle No</h5>\\n      <h4>{{selectedDeviceDetails.vehicleRegNo}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>IP Address</h5>\\n      <h4>{{selectedDeviceDetails.ipAddress}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Signal Strength</h5>\\n      <h4>{{selectedDeviceDetails.signalStrength}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Network Date</h5>\\n      <h4>{{selectedDeviceDetails.networkDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Ntework Time</h5>\\n      <h4>{{selectedDeviceDetails.networkTime}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Created Date</h5>\\n      <h4>{{selectedDeviceDetails.createdDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Updated Date</h5>\\n      <h4>{{selectedDeviceDetails.updatedDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Version</h5>\\n      <h4>{{selectedDeviceDetails.version}}</h4>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && editDeviceDetails()\\\" #f=\\\"ngForm\\\" novalidate>\\n          <table class=\\\"abhaya-table popup m-t-4 text-left\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"w-25p\\\">IMSI No</th>\\n                <th class=\\\"w-25p\\\">Provider</th>\\n                <th class=\\\"w-25p\\\">Mobile No</th>\\n                <th class=\\\"w-25p\\\">Status</th>\\n              </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"simDetails.length > 0\\\">\\n              <tr *ngFor=\\\"let details of simDetails; let idx = index\\\">\\n                <td class=\\\"w-25p\\\">{{details.imsiNumber}}</td>\\n                <td class=\\\"w-25p\\\">{{details.telecomProvider}}</td>\\n                <td class=\\\"w-25p\\\" *ngIf=\\\"!viewDetails\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mobileNumber[idx]\\\" #mobileNumberctrl=\\\"ngModel\\\"\\n                    name=\\\"mobileNumber{{idx}}\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && mobileNumberctrl.invalid }\\\"\\n                    minlength=\\\"{{ Validations.MOBILE_MIN_LENGTH }}\\\" maxlength=\\\"{{ Validations.MOBILE_MAX_LENGTH }}\\\"\\n                    pattern=\\\"{{ Validations.MOBILE_PATTERN }}\\\" />\\n                  <div *ngIf=\\\"f.submitted && mobileNumberctrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"mobileNumberctrl.errors?.minlength\\\">Mobile number must be 10 characters</div>\\n                    <div *ngIf=\\\"mobileNumberctrl.errors?.maxlength\\\">Mobile number must be 10 characters</div>\\n                    <div *ngIf=\\\"mobileNumberctrl.errors?.pattern\\\">Mobile number must be numeric</div>\\n                  </div>\\n  \\n                </td>\\n                <td class=\\\"w-25p\\\" *ngIf=\\\"viewDetails\\\">{{details.mobileNumber}}</td>\\n                <td class=\\\"w-25p\\\">{{details.status}}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <div class=\\\"row\\\" >\\n            <div class=\\\"w-100\\\" *ngIf=\\\"simDetails.length === 0\\\">\\n              <div >\\n                <h6 class=\\\"text-center text-red-medium\\\">No Sim Details Found</h6>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"!mobileNumberField\\\" class=\\\"text-red-medium\\\"> Atleast One Mobile Number required! </div>\\n          <span *ngIf=\\\"simDetails.length > 0\\\">\\n            <button *ngIf=\\\"!viewDetails\\\" type=\\\"submit\\\" class=\\\"btn btn-primary m-t-1\\\">Update</button>\\n          </span>\\n        </form>\\n      </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvbW9kYWxwb3B1cC9lZGl0dmlld2RldmljZXMvZWRpdHZpZXdkZXZpY2VzLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { deviceDetailsModel } from \"../../../../common/models/device-details-model\";\nimport { ToasterService } from '../../../../common/services/toaster.service';\nimport { DevicesService } from \"../../../../common/services/deviceserviceapi\";\nimport { Validations } from '../../../../common/constants/validationconstants';\n\n\n@Component({\n  selector: 'app-editviewdevices',\n  templateUrl: './editviewdevices.component.html',\n  styleUrls: ['./editviewdevices.component.sass']\n})\nexport class EditviewdevicesComponent implements OnInit {\n\n    @Input() selectedDeviceDetails: deviceDetailsModel;\n    public pageTitle: string;\n    public viewDetails: Boolean = true;\n    public primaryNumber: string;\n    public primaryProvider: string;\n    public secondaryNumber: string;\n    public secondaryProvider: string;\n    public simDetails = [];\n    mobileNumber = [];\n    public Validations: Object = Validations;\n    public isDataExists: Boolean = false;\n    public mobileNumberField: Boolean = true;\n\n    constructor(public activeModal: NgbActiveModal, private toasterService: ToasterService,\n        private devicesServiceapi: DevicesService\n        ) {\n        this.primaryProvider = '';\n        this.secondaryProvider = '';\n    }\n\n    ngOnInit() {\n        this.simDetails = this.selectedDeviceDetails.simDetails;\n        this.viewDetails = !(this.selectedDeviceDetails.selectedEvent === 'edit');\n        this.pageTitle = this.viewDetails ? 'View Device Details' : 'Edit Device Details';\n        // this.pageTitle += this.selectedDeviceDetails.imeiNumber;\n        // this.mobileNumber = !this.viewDetails ? [...this.simDetails] : this.mobileNumber;\n        for (let i = 0; i < this.simDetails.length; i++) {\n            this.mobileNumber.push(this.simDetails[i].mobileNumber);\n        }\n    }\n    editDeviceDetails() {\n        // we can write Array filter to remove all the null values please check it eg: list.filter((obj) => obj )\n        for (let i = 0; i < this.mobileNumber.length; i++) {\n            if (this.mobileNumber[i] !== null) {\n                this.simDetails[i].mobileNumber = this.mobileNumber[i];\n                this.simDetails[i].imeiNumber = this.selectedDeviceDetails.imeiNumber;\n                this.simDetails[i].createdDate = this.simDetails[i].createdDate.split('+')[0].replace('T', ' ')\n            }\n        }\n        // second one\n        for (let i = 0; i < this.simDetails.length; i++) {\n            \n            if ('' === this.simDetails[i].mobileNumber) {\n                this.mobileNumberField = false;\n            } else {\n                this.mobileNumberField = true;\n                break;\n            }\n        }\n        if (this.mobileNumberField) {\n            this.devicesServiceapi.updateDeviceDetails(this.simDetails)\n                .subscribe((_data: any) => {\n                    this.activeModal.close('refreshContent');\n                    this.toasterService.showSuccess('bottom-right', 'Successfully updated the device details.');\n                }, (_error: any) => {\n                    this.activeModal.close('Close click');\n                    this.toasterService.showError('bottom-right', 'ERROR: Unable to update the device details.');\n                }\n            );\n        }\n    }\n\n}","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Emergancy Details of {{selectedEmergencydata.imeiNumber}}</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close('refreshContent')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body p-r-2\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-6\\\">\\n      <h5>ID</h5>\\n      <h4>{{selectedEmergencydata.ebpPacketDataId}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>IMEI No</h5>\\n      <h4>{{selectedEmergencydata.imeiNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Vehicle No</h5>\\n      <h4>{{selectedEmergencydata.vehicleRegNo}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Reply No</h5>\\n      <h4>{{selectedEmergencydata.replyNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Latitude</h5>\\n      <h4>{{selectedEmergencydata.latitude}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Latitude Direction</h5>\\n      <h4>{{selectedEmergencydata.latitudeDirection}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Longitude</h5>\\n      <h4>{{selectedEmergencydata.longitude}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Longitude Direction</h5>\\n      <h4>{{selectedEmergencydata.longitudeDirection}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Distance</h5>\\n      <h4>{{selectedEmergencydata.distance}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Speed</h5>\\n      <h4>{{selectedEmergencydata.speed}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Network Date</h5>\\n      <h4>{{selectedEmergencydata.networkDate}} {{selectedEmergencydata.networkTime}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Packet Status</h5>\\n      <h4>{{selectedEmergencydata.packetStaus}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Altitude</h5>\\n      <h4>{{selectedEmergencydata.altitude}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>GPS Validity</h5>\\n      <h4>{{selectedEmergencydata.gpsValidity}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"selectedEmergencydata.checksum\\\">\\n      <h5>Checksum</h5>\\n      <h4>{{selectedEmergencydata.checksum}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"selectedEmergencydata.endCharacter\\\">\\n      <h5>End Character</h5>\\n      <h4>{{selectedEmergencydata.endCharacter}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Provider</h5>\\n      <h4>{{selectedEmergencydata.provider}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Created Date</h5>\\n      <h4>{{selectedEmergencydata.createdDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"selectedEmergencydata.packetType\\\">\\n      <h5>Packet Type</h5>\\n      <h4>{{selectedEmergencydata.packetType}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"selectedEmergencydata.packetType\\\">\\n      <h5>Checksum</h5>\\n      <h4>{{selectedEmergencydata.checksum}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"selectedEmergencydata.packetType\\\">\\n      <h5>Time Stamp</h5>\\n      <h4>{{selectedEmergencydata.timestamp}}</h4>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvbW9kYWxwb3B1cC9lZGl0dmlld2VtZXJnZW5jeS9lZGl0dmlld2VtZXJnZW5jeS5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { EmergencyModel } from \"../../../../common/models/emergencymonitoring.model\";\n\n@Component({\n  selector: 'app-editviewemergency',\n  templateUrl: './editviewemergency.component.html',\n  styleUrls: ['./editviewemergency.component.sass']\n})\nexport class EditviewemergencyComponent implements OnInit {\n\n  @Input() selectedEmergencydata: EmergencyModel;\n  constructor(public activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Health Details of {{selectedHealthDetails.imeiNumber}}</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close('refreshContent')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body p-r-2\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-6\\\">\\n      <h5>ID</h5>\\n      <h4>{{selectedHealthDetails.hmpPacketDataId}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>IMEI No</h5>\\n      <h4>{{selectedHealthDetails.imeiNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Vendor ID</h5>\\n      <h4>{{selectedHealthDetails.vendorId}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Firmware Version</h5>\\n      <h4>{{selectedHealthDetails.firmwareVersion}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Analog IO Status</h5>\\n      <h4>{{selectedHealthDetails.analogIOStatus}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Digital IO Status</h5>\\n      <h4>{{selectedHealthDetails.digitalIOStatus}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Battery Percentage</h5>\\n      <h4>{{selectedHealthDetails.batteryPercentage}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Memory Percentage</h5>\\n      <h4>{{selectedHealthDetails.memoryPercentage}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Network Date</h5>\\n      <h4>{{selectedHealthDetails.networkDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Network Time</h5>\\n      <h4>{{selectedHealthDetails.networkTime}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Low Battery Thr Value</h5>\\n      <h4>{{selectedHealthDetails.lowBatteryThrValue}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>End Of Packet</h5>\\n      <h4>{{selectedHealthDetails.endOfPacket}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Data Update ON</h5>\\n      <h4>{{selectedHealthDetails.dataUpdateON}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Data Update OFF</h5>\\n      <h4>{{selectedHealthDetails.dataUpdateOFF}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Created Date</h5>\\n      <h4>{{selectedHealthDetails.createdDate}}</h4>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvbW9kYWxwb3B1cC9lZGl0dmlld2hlYWx0aC9lZGl0dmlld2hlYWx0aC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { HealthModel } from \"../../../../common/models/healthmonitoring.model\";\n\n@Component({\n  selector: 'app-editviewhealth',\n  templateUrl: './editviewhealth.component.html',\n  styleUrls: ['./editviewhealth.component.sass']\n})\nexport class EditviewhealthComponent implements OnInit {\n\n  @Input() selectedHealthDetails: HealthModel;\n\n  constructor(public activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Movement Details of {{selectedMovementDetails.imeiNumber}}</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close('refreshContent')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body p-r-2\\\">\\n    <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <h5>ID No</h5>\\n           <h4>{{selectedMovementDetails.deviceCommunicationId}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n              <h5>IMEIumber</h5>\\n              <h4>{{selectedMovementDetails.imeiNumber}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Longitude</h5>\\n            <h4>{{selectedMovementDetails.langitude}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Latitude</h5>\\n            <h4>{{selectedMovementDetails.latitude}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Engine Status</h5>\\n            <h4>{{selectedMovementDetails.engineStatus}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Ignition Status</h5>\\n            <h4>{{selectedMovementDetails.ignitionStatus}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Network Date</h5>\\n            <h4>{{selectedMovementDetails.networkDate}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Prev Langitude</h5>\\n            <h4>{{selectedMovementDetails.prevLangitude}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Prev Latitude</h5>\\n            <h4>{{selectedMovementDetails.prevLatitude}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Created Date</h5>\\n            <h4>{{selectedMovementDetails.createdDate}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Location</h5>\\n            <h4>{{selectedMovementDetails.location}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Prev Network Date</h5>\\n            <h4>{{selectedMovementDetails.prevNetworkDate}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Prev Network Time</h5>\\n            <h4>{{selectedMovementDetails.prevNetworkTime}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Panic Status</h5>\\n            <h4>{{selectedMovementDetails.emergencyStatus}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Tamper Status</h5>\\n            <h4>{{selectedMovementDetails.tamperAlert}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Status</h5>\\n            <h4>{{selectedMovementDetails.status}}</h4>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <h5>Is Over Speed</h5>\\n            <h4>{{selectedMovementDetails.isDeviceOverSpeed}}</h4>\\n          </div>\\n    </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvbW9kYWxwb3B1cC9lZGl0dmlld21vdmVtZW50L2VkaXR2aWV3bW92ZW1lbnQuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { deviceCommunicationModel } from '../../../../common/models/device-communication-model';\n\n@Component({\n  selector: 'app-editviewmovement',\n  templateUrl: './editviewmovement.component.html',\n  styleUrls: ['./editviewmovement.component.sass']\n})\nexport class EditviewmovementComponent implements OnInit {\n\n  constructor(public activeModal: NgbActiveModal) { }\n  \n  @Input() selectedMovementDetails : deviceCommunicationModel;\n\n  ngOnInit() { }\n\n}","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">RawData Details of {{selectedrawdata.imeiNumber}}</h5>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close('refreshContent')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body p-r-2\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <h5>ID No</h5>\\n      <h4>{{selectedrawdata.rawDataId}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>IMEI No</h5>\\n      <h4>{{selectedrawdata.imeiNumber}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Vehicle No</h5>\\n      <h4>{{selectedrawdata.vehicleRegNo}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>CVP Type</h5>\\n      <h4>{{selectedrawdata.cvpType}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Packet Type</h5>\\n      <h4>{{selectedrawdata.packetType}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Alert ID</h5>\\n      <h4>{{selectedrawdata.vehicleModeId}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Network Date</h5>\\n      <h4>{{selectedrawdata.networkDate}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Network Time</h5>\\n      <h4>{{selectedrawdata.networkTime}}</h4>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h5>Packet Status</h5>\\n      <h4>{{selectedrawdata.packetStatus}}</h4>\\n    </div>\\n    <div class=\\\"col-md-12\\\">\\n      <h5>Raw Data</h5>\\n      <h4>{{selectedrawdata.rawData}}</h4>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvbW9kYWxwb3B1cC9lZGl0dmlld3Jhd2RhdGEvZWRpdHZpZXdyYXdkYXRhLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { RawData } from \"../../../../common/models/rawdata.model\";\n\n@Component({\n  selector: 'app-editviewrawdata',\n  templateUrl: './editviewrawdata.component.html',\n  styleUrls: ['./editviewrawdata.component.sass']\n})\nexport class EditviewrawdataComponent implements OnInit {\n\n  @Input() selectedrawdata: RawData;\n  constructor(public activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n  <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n    <div class=\\\"col-md-6 p-l-0\\\">\\n      <h4>Movement Details</h4>\\n    </div>\\n    <div class=\\\"col-md-5 text-right\\\">\\n        <span class=\\\"btn-circle\\\"><i class=\\\"icon-ab_download\\\"></i></span>\\n        <span class=\\\"btn-circle m-r-1\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"icon-ab-refresh\\\"></i></span>\\n    </div>\\n    <div class=\\\"col-md-1 p-r-0 text-right\\\">\\n      <div class=\\\"filters\\\">\\n        <button type=\\\"button\\\" class=\\\"filters-button\\\" [ngClass]=\\\"{ 'active': showFilters}\\\" (click)=\\\"toggleFilters()\\\">\\n          <i class=\\\"icon-ab-searchfilter\\\"></i>\\n          <span>Filters</span>\\n        </button>\\n        <div class=\\\"filters-body \\\" *ngIf=\\\"showFilters\\\">\\n          <div class=\\\"arrow-up\\\"></div>\\n          <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && applyFilters(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n            <app-citydistrict #validateCityDistrict (isCityDistrictValid)=\\\"isCityDistrictValid($event)\\\"\\n              [cityDistrictConfig]='cityDistrictConfig'></app-citydistrict>\\n\\n            <div class=\\\"form-group\\\">\\n              <label>DATE</label>\\n              <app-datepicker class=\\\"form-control bdr-none p-a-0\\\" name=\\\"searchDate\\\" [(ngModel)]=\\\"searchDate\\\"\\n                #searchDatectrl=\\\"ngModel\\\" appForbiddenName=\\\"fred\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && searchDatectrl.invalid }\\\"\\n                [datePickerModel]=\\\"datePickerModel\\\" searchDatectrl>\\n              </app-datepicker>\\n              <div *ngIf=\\\"f.submitted && searchDatectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"searchDatectrl.errors.required\\\">Search date is required</div>\\n              </div>\\n            </div>\\n\\n            <!-- <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Status</label>\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"status\\\" (change)=\\\"getMovementDetails()\\\" name=\\\"status\\\"\\n                #statusctrl=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && statusctrl.invalid }\\\">\\n                <option value=\\\"\\\">-- Select Status --</option>\\n                <option value='Communicating'>Communicating</option>\\n                <option value='NOTCommunicating'>Not Communicating</option>\\n              </select>\\n              <div *ngIf=\\\"f.submitted && statusctrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <span *ngIf=\\\"statusctrl.errors.required\\\">Status is Required</span>\\n              </div>\\n            </div> -->\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Vehicle Move</label>\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"vehicleMode\\\" name=\\\"vehicleMode\\\"\\n                #vehicleModectrl=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && vehicleModectrl.invalid }\\\">\\n                <option value=\\\"\\\">-- Select Status --</option>\\n                <option value='IDLEMODE'>Idle</option>\\n                <option value='RUNNINGMODE'>Running</option>\\n                <option value='SLEEPMODE'>Sleep</option>\\n              </select>\\n              <div *ngIf=\\\"f.submitted && vehicleModectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <span *ngIf=\\\"vehicleModectrl.errors.required\\\">Status is Required</span>\\n              </div>\\n            </div>\\n\\n\\n\\n            <div class=\\\"form-group m-t-3\\\">\\n              <button class=\\\"btn btn-primary w-100p\\\" type=\\\"submit\\\">Search</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/devices']\\\">Devices</a>\\n          </li>\\n          <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Movement Details</li>\\n        </ol>\\n      </nav>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row no-gutters m-b-3\\\">\\n      <div class=\\\"col-md-6 p-a-0\\\">\\n          <div class=\\\"form-group abhaya-table-search focal-point\\\">\\n            <i class=\\\"icon-ab-search\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getMovementDetails()\\\"\\n              placeholder=\\\"Search IMEI / Vehicle / IoT No.\\\">\\n            <span class=\\\"separator\\\"> </span>\\n          </div>\\n        </div>\\n    <div class=\\\"col-md-6 p-a-0 text-primary text-right p-t-2\\\">\\n      Total Records : <h5 class=\\\"total-records-text d-inline-block\\\"> {{page.totalElements}}</h5>\\n    </div>\\n   \\n  </div>\\n\\n  <div class=\\\"row no-gutters pt-8\\\">\\n    <table class=\\\"abhaya-table\\\">\\n      <thead>\\n        <tr>\\n          <th>Vehicle No</th>\\n          <th>IoT No</th>\\n          <th>IMEI Number</th>\\n          <th>Movement</th>\\n          <th>Packet Date</th>\\n          <th>Packet Time</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"isDataExists\\\">\\n        <tr\\n          *ngFor=\\\"let device of movementData | paginate: { id: 'paginationCtrl', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n          <td class=\\\"align-middle\\\">{{device.vehicleRegNo}}</td>\\n          <td class=\\\"align-middle\\\">{{device.serialNumber}}</td>\\n          <td class=\\\"align-middle\\\">{{device.imeiNumber}}</td>\\n          <td class=\\\"align-middle\\\">{{device.vehicleMode}}</td>\\n          <td class=\\\"align-middle\\\">{{device.prevNetworkDate}}</td>\\n          <td class=\\\"align-middle\\\">{{device.prevNetworkTime}}</td>\\n          <td>\\n            <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n              aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n              <div class=\\\"arrow-up\\\"></div>\\n              <a (click)=\\\"viewMovement(device)\\\" class=\\\"dropdown-item\\\">View Details</a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n    <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n        <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n            <span>Page Size :</span>\\n            <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n              <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n            </select>\\n          </div>\\n      <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n        <pagination-controls id=\\\"paginationCtrl\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\"\\n          maxSize=\\\"6\\\" directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n        </pagination-controls>\\n     \\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvbW92ZW1lbnQvbW92ZW1lbnQuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CityDristict } from \"../././../../common/models/citydristict.model\";\n\nimport { CitydistrictComponent } from \"../../../common/components/citydistrict/citydistrict.component\";\nimport { DevicesService } from \"../../../common/services/deviceserviceapi\";\nimport { PageModel } from \"../../../common/models/page.model\";\nimport { environment } from '.././../../../environments/environment';\nimport { DatePickerModel } from '../../../common/models/date-picker-model.model';\nimport { EditviewmovementComponent } from \"../modalpopup/editviewmovement/editviewmovement.component\";\n\n@Component({\n  selector: 'app-movement',\n  templateUrl: './movement.component.html',\n  styleUrls: ['./movement.component.sass']\n})\nexport class MovementComponent implements OnInit {\n  cityDistrictConfig: CityDristict;\n  cityDistrictCompData: any;\n  parentFormSubmitted: boolean;\n  showFilters: boolean = false;\n  movementData; //Need to create the model\n  searchText: string = '';\n  page: PageModel = new PageModel();\n  isDataExists: Boolean = false;\n  pageSizeValues: Array<number> = environment.pageSizeValues;\n  pageSize: Number = environment.pageSize;\n  intilPageNumber: Number = 0;\n  p: Number;\n  datePickerModel: DatePickerModel;\n  searchDate: string = '';\n  noDataText: string = 'No Movement Details Available';\n  status : string = 'Communicating';\n  vehicleMode : string = '';\n  stateId : string = '';\n  districtId : string = '';\n  cityId : string = '';\n  rtoId : string = '';\n\n  @ViewChild('validateCityDistrict') private CitydistrictComponent: CitydistrictComponent;\n  private isCityDistrictValid(formValid: any) {\n    this.cityDistrictCompData = formValid;\n  }\n  constructor(private deviceapi: DevicesService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getMovementDetails();\n  }\n\n  toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  viewMovement(movementDetails) {\n    const modalRef = this.modalService.open(EditviewmovementComponent, {\n      size: 'lg', backdrop: 'static',\n      keyboard: false\n    });\n    modalRef.componentInstance.selectedMovementDetails = movementDetails;\n  }\n  changePageSize() {\n    this.getMovementDetails();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getMovementDetails();\n  }\n\n  applyFilters(parentForm) {\n    this.parentFormSubmitted = true;\n    this.CitydistrictComponent.validateChildForm(this.parentFormSubmitted);\n    if (!parentForm.valid || !this.cityDistrictCompData.isFormValid) {\n      return;\n    }\n    else {\n      this.districtId = this.cityDistrictCompData.districtName;\n      this.cityId = this.cityDistrictCompData.cityName;\n      this.rtoId = this.cityDistrictCompData.rtoOfficeName;\n      this.showFilters = false;\n      this.getMovementDetails();\n    }\n\n  }\n  refreshPage(){\n    this.intilPageNumber = 0;\n    this.pageSize = environment.pageSize;\n    this.searchDate = '';\n    this.searchText = '';\n    this.stateId = '';\n    this.districtId = '';\n    this.cityId = '';\n    this.vehicleMode = '';\n    this.getMovementDetails();\n  }\n  getMovementDetails() {\n    console.log(this.searchDate);\n    this.deviceapi.getmovementDetails(this.intilPageNumber, this.pageSize, '', this.searchText,\n      this.status, this.vehicleMode, this.stateId, this.districtId, this.cityId,this.rtoId)\n      .subscribe((_data: any) => {\n        this.movementData = _data.content;\n        this.page = _data.page;\n        this.isDataExists = (this.movementData.length > 0);\n      });\n  }\n\n}","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n  <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n    <div class=\\\"col-md-6 p-l-0\\\">\\n      <h4>Raw Data</h4>\\n    </div>\\n    <div class=\\\"col-md-5 text-right\\\">\\n        <span class=\\\"btn-circle\\\"><i class=\\\"icon-ab_download\\\"></i></span>\\n        <span class=\\\"btn-circle m-r-1\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"icon-ab-refresh\\\"></i></span>\\n    </div>\\n    <div class=\\\"col-md-1 p-r-0 text-right\\\">\\n      <div class=\\\"filters\\\">\\n        <button type=\\\"button\\\" class=\\\"filters-button\\\" [ngClass]=\\\"{ 'active': showFilters}\\\" (click)=\\\"toggleFilters()\\\">\\n          <i class=\\\"icon-ab-searchfilter\\\"></i>\\n          <span>Filters</span>\\n        </button>\\n        <div class=\\\"filters-body \\\" *ngIf=\\\"showFilters\\\">\\n          <div class=\\\"arrow-up\\\"></div>\\n          <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && applyFilters(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n            <app-citydistrict #validateCityDistrict (isCityDistrictValid)=\\\"isCityDistrictValid($event)\\\"\\n              [cityDistrictConfig]='cityDistrictConfig'></app-citydistrict>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label>DATE</label>\\n                  <app-datepicker\\n                      class=\\\"form-control bdr-none p-a-0\\\"\\n                      name=\\\"searchDate\\\" \\n                      [(ngModel)]=\\\"searchDate\\\"\\n                      #searchDatectrl= \\\"ngModel\\\"\\n                      appForbiddenName=\\\"fred\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': f.submitted && searchDatectrl.invalid }\\\"\\n                      [datePickerModel]=\\\"datePickerModel\\\"          \\n                      searchDatectrl>\\n                  </app-datepicker>\\n               <div *ngIf=\\\"f.submitted && searchDatectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"searchDatectrl.errors.required\\\">Search Date is required</div>\\n               </div>\\n              </div>\\n            <div class=\\\"form-group m-t-3\\\">\\n              <button class=\\\"btn btn-primary w-100p\\\" type=\\\"submit\\\">Search</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item\\\" aria-current=\\\"page\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/devices']\\\">Devices</a></li>\\n          <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Raw Data</li>\\n        </ol>\\n      </nav>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row no-gutters m-b-3\\\">\\n      <div class=\\\"col-md-6 p-a-0\\\">\\n          <div class=\\\"form-group abhaya-table-search focal-point\\\">\\n            <i class=\\\"icon-ab-search\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getRawData()\\\" placeholder=\\\"Search by IMEI / Vehicle No.\\\">\\n            <span class=\\\"separator\\\"> </span>\\n          </div>\\n        </div>\\n    <div class=\\\"col-md-6 p-a-0 text-primary text-right p-t-2\\\">\\n      Total Records : <h5 class=\\\"total-records-text d-inline-block\\\"> {{page.totalElements}}</h5>\\n    </div>\\n  \\n  </div>\\n\\n  <div class=\\\"row no-gutters pt-8\\\">\\n    <table class=\\\"abhaya-table\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n            <th>IMEI No</th>\\n            <th>Vehicle No</th>\\n            <th>CVP Type</th>\\n            <th>Packet Type</th>\\n            <th>Alert ID</th>\\n            <th>Network Date</th>\\n            <th>Network Time</th>\\n            <th>Packet Status</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n     <tbody *ngIf=\\\"isDataExists\\\">\\n        <tr *ngFor=\\\"let data of rawData | paginate: { id: 'paginationCtrl', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n          <td>{{data.rawDataId}}</td>\\n          <td>{{data.imeiNumber}}</td>\\n          <td>{{data.vehicleRegNo}}</td>\\n          <td>{{data.cvpType}}</td>\\n          <td>{{data.packetType == null ? '--' : data.packetType}}</td>\\n          <td>{{data.vehicleModeId}}</td>\\n          <td>{{data.networkDate}}</td>\\n          <td>{{data.networkTime}}</td>\\n          <td>{{data.packetStatus}}</td>\\n            <td>\\n              <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n              <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                <div class=\\\"arrow-up\\\"></div>\\n                <a (click)=\\\"viewRawData(data)\\\" class=\\\"dropdown-item\\\">View Details</a>\\n              </div>\\n            </td>\\n          </tr>\\n     </tbody>\\n    </table>\\n    <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n    <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n        <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n            <span>Page Size :</span>\\n            <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n              <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n            </select>\\n          </div>\\n        <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n          <pagination-controls id=\\\"paginationCtrl\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\"\\n            directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n          </pagination-controls>\\n          \\n        </div>\\n      </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2RldmljZXMvcmF3ZGF0YS9yYXdkYXRhLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CityDristict } from \"../././../../common/models/citydristict.model\";\nimport { CitydistrictComponent } from \"../../../common/components/citydistrict/citydistrict.component\";\nimport { DevicesService } from \"../../../common/services/deviceserviceapi\";\nimport { PageModel } from \"../../../common/models/page.model\";\nimport { environment } from '.././../../../environments/environment';\nimport { DatePickerModel } from '../../../common/models/date-picker-model.model';\nimport { RawData } from \"../../../common/models/rawdata.model\";\nimport { PaginationModel } from \"../../../common/models/pagination.model\";\nimport { EditviewrawdataComponent } from \"../modalpopup/editviewrawdata/editviewrawdata.component\";\n\n@Component({\n  selector: 'app-rawdata',\n  templateUrl: './rawdata.component.html',\n  styleUrls: ['./rawdata.component.sass']\n})\nexport class RawdataComponent implements OnInit {\n  cityDistrictConfig: CityDristict;\n  cityDistrictCompData : any;\n  parentFormSubmitted: boolean;\n  showFilters: boolean = false;\n  rawData : Array<RawData>;\n  searchText: string = '';\n  page: PageModel = new PageModel();\n  isDataExists: Boolean = false;\n  pageSizeValues: Array<number> = environment.pageSizeValues;\n  pageSize: Number = environment.pageSize;\n  intilPageNumber: Number = 0;\n  p: Number;\n  updateRawdata: any;\n  intervalTime: number = environment.setIntervalTime;\n  datePickerModel:DatePickerModel;\n  searchDate: string = '';\n  districtId: string = '';\n  cityId: string = '';\n  noDataText : string = 'No Raw Data Available';\n  @ViewChild('validateCityDistrict') private CitydistrictComponent: CitydistrictComponent;\n  private isCityDistrictValid(formValid: any) {\n    this.cityDistrictCompData = formValid;\n  }\n  constructor(private deviceapi: DevicesService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getRawData();\n    this.updateRawdata = setInterval(() => {\n      this.p = 1;\n      this.getRawData();\n  }, this.intervalTime);\n  }\n\n  toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  viewRawData(selectedRawData){\n  const modalRef = this.modalService.open(EditviewrawdataComponent, {\n    size: 'lg', backdrop: 'static',\n    keyboard: false\n});\nmodalRef.componentInstance.selectedrawdata = selectedRawData;\n}\n  changePageSize() {\n    this.getRawData();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getRawData();\n}\n\napplyFilters(parentForm) {\n    this.parentFormSubmitted = true;\n    this.CitydistrictComponent.validateChildForm(this.parentFormSubmitted);\n    if (!parentForm.valid || !this.cityDistrictCompData.isFormValid) {\n      return;\n    }\n    else {\n      this.districtId = this.cityDistrictCompData.districtName;\n      this.cityId = this.cityDistrictCompData.cityName;\n      this.showFilters = false;\n      this.getRawData();\n    }\n    \n  }\n  refreshPage(){\n    this.intilPageNumber = 0;\n    this.pageSize = environment.pageSize;\n    this.searchDate = '';\n    this.searchText = '';\n    this.districtId = '';\n    this.cityId = '';\n    this.getRawData();\n  }\n  getRawData() {\n    this.deviceapi.getRawData(this.intilPageNumber, this.pageSize, this.searchDate, this.searchText, this.districtId, this.cityId)\n      .subscribe((_data: PaginationModel) => {\n        this.rawData = _data.content;\n        this.page = _data.page;\n        this.isDataExists = (this.rawData.length > 0);\n      });\n  }\n  ngOnDestroy() {\n    if (this.updateRawdata) {\n        clearInterval(this.updateRawdata);\n    }\n}\n\n}"],"sourceRoot":""}
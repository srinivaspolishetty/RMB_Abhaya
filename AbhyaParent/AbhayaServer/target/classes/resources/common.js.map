{"version":3,"sources":["webpack:///./src/app/common/services/deviceserviceapi.ts","webpack:///./src/app/common/services/driversServiceApi.ts","webpack:///./src/app/common/services/toaster.service.ts","webpack:///./src/app/common/services/tripserviceapi.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { APIEndPoints } from '../constants/apiendpointconstants';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DevicesService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n            'Authorization': 'my-auth-token'\r\n        })\r\n    };\r\n\r\n    getAllDevices(page: Number, size: Number, searchDate: string, searchValue: string, districtId: string, cityId: string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.deviceDetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&districtId=${districtId}&cityId=${cityId}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getAllDevicesCommunication(page: Number, size: Number, searchDate: string, searchValue: string, districtId: string, cityId: string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.devicecommunication}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&districtId=${districtId}&cityId=${cityId}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getLiveDevices(stateId) {\r\n        const url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.liveDevices}`;\r\n    return this.httpClient.get(`${url}&stateId=${stateId}`);;\r\n    }\r\n\r\n    getmovementDetails(page: Number, size: Number, searchDate: string, searchValue: string, status: string, vehicleMode: string, stateId: string, districtId: string, cityId: string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.movement}`;\r\n        url += `?page=${page}&size=${size}&status=${status}&vehicleMode=${vehicleMode}&stateId=${stateId}&districtId=${districtId}&cityId=${cityId}&searchValue=${searchValue}&searchDate=${searchDate}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getLocationData(page: Number, size: Number, searchDate: string, searchValue: string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.locationDetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    downloadLocation(page: Number, searchDate: string, searchValue: string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.locationDetails}`;\r\n        url += `?page=${page}&searchDate=${searchDate}&searchValue=${searchValue}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getemergancyDetails(page: Number, size: Number, searchDate: string, searchValue: string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.emergancydetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getHealthData(page: Number, size: Number, searchDate: string, searchValue: string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.healthDetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getRawData(page: Number, size: Number, searchDate: string, searchValue: string, districtId: string, cityId: string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.devices.rawdata}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&districtId=${districtId}&cityId=${cityId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    updateDeviceDetails(deviceDetails) {\r\n        const url = `${environment.apiBase}${environment.version}${APIEndPoints.devices.simDetails}`;\r\n        return this.httpClient.post(url, deviceDetails, this.httpOptions);\r\n    }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { APIEndPoints } from '../constants/apiendpointconstants';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DriversService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n            'Authorization': 'my-auth-token'\r\n        })\r\n    };\r\n\r\n    getAllDriverDetails(page: Number, size: Number, searchDate: string, searchValue: string, districtId: string, cityId : string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.drivers.driverDetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&districtId=${districtId}&cityId=${cityId}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getAllDriverDutyDetails(page: Number, size: Number, searchDate: string, searchValue: string, districtId: string, cityId : string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}/${APIEndPoints.drivers.driverdutydetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&districtId=${districtId}&cityId=${cityId}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n    editDriverDetails(driverobj) {\r\n        const url = `${environment.apiBase}${environment.version}${APIEndPoints.drivers.editRfId}`;\r\n        return this.httpClient.post(url, driverobj, this.httpOptions);\r\n        return this.httpClient.get(url);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToasterService {\r\n\r\n  // http://technoidlab.com/demos/ng6-toastr-notifications/\r\n  constructor(public toastr: ToastrManager) { }\r\n\r\n  showSuccess(position: any, msg: string) {\r\n    this.toastr.successToastr(msg, 'Success!', { position: position });\r\n  }\r\n\r\n  showError(position: any, msg: string) {\r\n    this.toastr.errorToastr(msg, 'Oops!', { position: position });\r\n  }\r\n\r\n  showWarning(position: any, msg: string) {\r\n    this.toastr.warningToastr(msg, 'Alert!', { position: position });\r\n  }\r\n\r\n  showInfo(position: any, msg: string) {\r\n    this.toastr.infoToastr(msg, 'Info', { position: position });\r\n  }\r\n\r\n  showCustom(position: any) {\r\n    this.toastr.customToastr(`<span style='color: green; font - size: 16px; text - align: center; '>Custom Toast</span>`, null,\r\n    { enableHTML: true, position: position} );\r\n  }\r\n\r\n  showToast(position: any = 'top-center') {\r\n    this.showSuccess(position, '');\r\n    this.toastr.infoToastr('This is a toast.', 'Toast', { position: position });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { APIEndPoints } from '../constants/apiendpointconstants';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TripServiceApi {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n            'Authorization': 'my-auth-token'\r\n        })\r\n    };\r\n\r\n    getTripDetails(page: Number, size: Number, searchDate: string, searchValue: string,tripClosed: Boolean, districtId: string, cityId : string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}${APIEndPoints.trip.tripDetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&isTripClosed=${tripClosed}&districtId=${districtId}&cityId=${cityId}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n    getTripTracking(tripId) {\r\n        let url = `${environment.apiBase}${environment.version}${APIEndPoints.trip.tripDetails}`;\r\n        url += `?tripId=${tripId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n    getPanicDetails(page: Number, size: Number, searchDate: string, searchValue: string, eventType : string, panicClosed: Boolean, districtId: string, cityId : string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}${APIEndPoints.trip.panicDetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&eventType=${eventType}&closed=${panicClosed}&districtId=${districtId}&cityId=${cityId}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n    getDevicePanic(page: Number, size: Number, searchDate: string, searchValue: string, panicClosed: Boolean, districtId: string, cityId : string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}${APIEndPoints.trip.devicePanicDetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&districtId=${districtId}&closed=${panicClosed}&cityId=${cityId}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n    getRouteDeviationDetails(page: Number, size: Number, searchDate: string, searchValue: string, districtId: string, cityId : string, rtoId : string) {\r\n        let url = `${environment.apiBase}${environment.version}${APIEndPoints.trip.routeDeviation}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}&districtId=${districtId}&cityId=${cityId}&rtoOfficeId=${rtoId}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}
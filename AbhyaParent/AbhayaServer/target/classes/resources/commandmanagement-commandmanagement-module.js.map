{"version":3,"sources":["webpack:///./src/app/common/models/commandmanagement.model.ts","webpack:///./src/app/common/services/commandmanagementserviceapi.ts","webpack:///./src/app/mainComponents/commandmanagement/commandexecute/commandexecute.component.html","webpack:///./src/app/mainComponents/commandmanagement/commandexecute/commandexecute.component.sass","webpack:///./src/app/mainComponents/commandmanagement/commandexecute/commandexecute.component.ts","webpack:///./src/app/mainComponents/commandmanagement/commandhistory/commandhistory.component.html","webpack:///./src/app/mainComponents/commandmanagement/commandhistory/commandhistory.component.sass","webpack:///./src/app/mainComponents/commandmanagement/commandhistory/commandhistory.component.ts","webpack:///./src/app/mainComponents/commandmanagement/commandmanagement-routing.module.ts","webpack:///./src/app/mainComponents/commandmanagement/commandmanagement.module.ts","webpack:///./src/app/mainComponents/commandmanagement/modalpopup/editviewcommhistory/editviewcommhistory.component.html","webpack:///./src/app/mainComponents/commandmanagement/modalpopup/editviewcommhistory/editviewcommhistory.component.sass","webpack:///./src/app/mainComponents/commandmanagement/modalpopup/editviewcommhistory/editviewcommhistory.component.ts"],"names":[],"mappings":"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","file":"commandmanagement-commandmanagement-module.js","sourcesContent":["export class CommandManagement {\r\n    public taskId: number;\r\n    public createdDate: string;\r\n    public description: string;\r\n    public deviceResponseStatus: boolean;\r\n    public header: string;\r\n    public imeiNumber: string;\r\n    public mobileNumber: Date;\r\n    public payload: string;\r\n    public randomCode: string;\r\n    public replyGatewayNumber: string;\r\n    public requestCommandName: string;\r\n    public smsStatus: string;\r\n  }\r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { APIEndPoints } from '../constants/apiendpointconstants';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommandManagementService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n            'Authorization': 'my-auth-token'\r\n        })\r\n    };\r\n\r\n    sendActivationRequest(packetDetails) {\r\n        const url = `${environment.apiBase}${environment.version}${APIEndPoints.command.executeTask}`;\r\n        return this.httpClient.post(url, packetDetails, this.httpOptions);\r\n    }\r\n\r\n    getCommandList(page: Number, size: Number, searchDate: string, searchValue: string) {\r\n        let url = `${environment.apiBase}${environment.version}${APIEndPoints.command.taskDetails}`;\r\n        url += `?page=${page}&size=${size}&searchDate=${searchDate}&searchValue=${searchValue}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getpayloadDetails(type: string) {\r\n        let url = `${environment.apiBase}${environment.version}${APIEndPoints.command.smsPacketTypes}`;\r\n        url += `?commandType=${type}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container top-header  p-b-3\\\">\\n  <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n     <div class=\\\"col-md-5 p-l-0\\\">\\n        <h4>Command Execute</h4>\\n     </div>\\n     <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n        <nav aria-label=\\\"breadcrumb\\\">\\n           <ol class=\\\"breadcrumb\\\">\\n              <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n              <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Command Management</li>\\n              <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Command Execute</li>\\n           </ol>\\n        </nav>\\n     </div>\\n  </div>\\n  <form #commandExeForm=\\\"ngForm\\\" name=\\\"form\\\" novalidate\\n  (ngSubmit)=\\\"commandExeForm.valid && executecommand(commandExeForm)\\\">\\n  <div class=\\\"row p-t-6 p-r-4 m-a-0\\\">\\n     <div class=\\\"col-md-4 p-r-0 form-group\\\"\\n        [class.has-error]=\\\"commandExeForm.submitted && executeTypecontrol.invalid\\\">\\n        <label class=\\\"required\\\">Execute Type</label>\\n        <select class=\\\"form-control\\\" name=\\\"executeType\\\" required #executeTypecontrol=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"executeType\\\" (change)=\\\"executechange()\\\">\\n        <option value=\\\"\\\">Select</option>\\n        <option value=\\\"SET\\\">SET</option>\\n        <option value=\\\"GET\\\">GET</option>\\n        <option value=\\\"CLR\\\">CLR</option>\\n        </select>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"commandExeForm.submitted && executeTypecontrol.invalid\\\">\\n        Execute Type is required</span>\\n     </div>\\n     <div class=\\\"col-md-4 p-r-0 form-group\\\" [class.has-error]=\\\"commandExeForm.submitted && payLoadcontrol.invalid\\\">\\n        <label class=\\\"required\\\">Payload</label>\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"payLoad\\\" name=\\\"payLoad\\\" required #payLoadcontrol=\\\"ngModel\\\"\\n        (change)=\\\"payloadchange($event)\\\">\\n        <option value=\\\"\\\">Select</option>\\n        <option *ngFor=\\\"let data of payLoadData\\\" [value]=\\\"data.payload\\\">{{data.description}}</option>\\n        </select>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"commandExeForm.submitted && payLoadcontrol.invalid\\\">\\n        Payload is required</span>\\n     </div>\\n     <div class=\\\"col-md-4 p-r-0 form-group\\\"\\n        [class.has-error]=\\\"commandExeForm.submitted && imeiNumbercontrol.invalid\\\">\\n        <label class=\\\"required\\\">IMEI Number</label>\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"imeiNumber\\\" #imeiNumbercontrol=\\\"ngModel\\\" required\\n        name=\\\"imeiNumber\\\">\\n        <option value=\\\"\\\">Select IMEI Number</option>\\n        <option *ngFor=\\\"let device of deviceData\\\" value=\\\"{{device.imeiNumber}}\\\">{{device.imeiNumber}}</option>\\n        </select>\\n        <span class=\\\"help-block\\\" *ngIf=\\\"commandExeForm.submitted && imeiNumbercontrol.invalid\\\">\\n        IMEI Number is required</span>\\n     </div>\\n     <div class=\\\"col-md-4 p-r-0 form-group\\\"\\n     [class.has-error]=\\\"commandExeForm.submitted && payloadValuecontrol.invalid\\\" *ngIf=\\\"propertyValue == true\\\">\\n     <label class=\\\"required\\\">Value</label>\\n     <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"payloadValue\\\" name=\\\"payloadValue\\\" \\n     #payloadValuecontrol=\\\"ngModel\\\" required /> \\n     <span class=\\\"help-block\\\" *ngIf=\\\"commandExeForm.submitted && payloadValuecontrol.errors?.required\\\">\\n     Value is required</span>              \\n       </div>\\n</div>\\n<div class=\\\"row m-a-0\\\">\\n  <div class=\\\"col-md-6 form-group\\\" *ngIf=\\\"showBtn == true\\\">\\n     <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{btnText}}</button>\\n  </div>\\n</div>\\n</form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2NvbW1hbmRtYW5hZ2VtZW50L2NvbW1hbmRleGVjdXRlL2NvbW1hbmRleGVjdXRlLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CommandManagementService } from '../../../common/services/commandmanagementserviceapi';\nimport { DevicesService } from '../../../common/services/deviceserviceapi';\nimport { ToasterService } from '../../../common/services/toaster.service';\nimport { Payload } from '../../../common/models/payLoad.model';\nimport { deviceDetailsModel } from '../../../common/models/device-details-model';\nimport { PaginationModel } from '../../../common/models/pagination.model';\n\n@Component({\n  selector: 'app-commandexecute',\n  templateUrl: './commandexecute.component.html',\n  styleUrls: ['./commandexecute.component.sass']\n})\nexport class CommandexecuteComponent implements OnInit {\n  public deviceData : Array<deviceDetailsModel> = [];\n  public executeType: string;\n  public payLoad: string;\n  public imeiNumber: string;\n  public commandType: string;\n  public payloadValue: string;\n  public payloadDesc: String;\n  public payLoadData : Payload;\n  public propertyValue: Boolean = false;\n  public showBtn: Boolean = false;\n  public btnText: string;\n\n  constructor(private commandApi : CommandManagementService,\n            private devicesApi : DevicesService,\n            private toasterService: ToasterService) { \n              this.executeType = '';\n              this.payLoad = '';\n              this.imeiNumber = '';\n              this.commandType = '';\n            }\n\n  ngOnInit() {\n    this.getAllDeviceDetails()\n  }\n\n  executechange() {\n    this.getPayloadData(this.executeType);\n    this.payLoad = '';\n    this.imeiNumber = '';\n    this.payloadValue = '';\n    this.showBtn = true;\n    this.propertyValue = (this.executeType === 'SET');\n    this.btnText = this.executeType + ' Command';\n    //this.resetForm(commandExeForm);\n  }\n\n  getPayloadData(type: string) {\n    this.commandApi.getpayloadDetails(type)\n      .subscribe((data: Payload) => {\n          this.payLoadData = data;\n    });\n  }\n\n  payloadchange(event) {\n    const selectedOptions = event.target['options'];\n    const selectedIndex = selectedOptions.selectedIndex;\n    this.payloadDesc = selectedOptions[selectedIndex].text;\n  }\n\n  getAllDeviceDetails() {\n    this.devicesApi.getAllDevices(0, 0, '', '','','','')\n    .subscribe((data : PaginationModel) => {\n        this.deviceData = data.content;\n    });\n  }\n\n  resetForm(commandExeForm) {\n    commandExeForm.resetForm();\n    this.executeType = '';\n    this.payLoad = '';\n    this.imeiNumber = '';\n    this.commandType = '';\n    this.propertyValue = false;\n  }\n\n  executecommand(commandExeForm) {\n    const newobj = new Object(\n        {\n            header: this.executeType,\n            payload: this.payLoad + this.payloadValue,\n            imeiNumber: this.imeiNumber,\n            description: this.payloadDesc\n        }\n    );\n    this.commandApi.sendActivationRequest(JSON.stringify(newobj))\n        .subscribe((data: any) => {            \n            (data.message === 'Success') ? this.toasterService.showSuccess('bottom-right', 'Successfully Executed ' + this.executeType + ' Command.') :\n            (data.message === 'Already Existed') ? this.toasterService.showWarning('bottom-right', 'Command was already Sent Waiting for Response.') :\n                this.toasterService.showError('bottom-right', '' + data.message);\n            this.resetForm(commandExeForm);\n        }, error => {\n            console.log('error', error);\n        });\n}\n  \n\n}\n","module.exports = \"<div class=\\\"container top-header p-b-3\\\">\\n    <div class=\\\"row head-block no-gutters bdr-bottom m-b-3 p-t-1\\\">\\n        <div class=\\\"col-md-6 p-l-0\\\">\\n          <h4>Command History</h4>\\n        </div>\\n        <div class=\\\"col-md-5 text-right\\\">\\n            <span class=\\\"btn-circle\\\"><i class=\\\"icon-ab_download\\\"></i></span>\\n            <span class=\\\"btn-circle\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"icon-ab-refresh\\\"></i></span>\\n        </div>\\n        <div class=\\\"col-md-1 p-r-0 text-right\\\">\\n            <div class=\\\"filters\\\">\\n              <button type=\\\"button\\\" class=\\\"filters-button\\\" [ngClass]=\\\"{ 'active': showFilters}\\\" (click)=\\\"toggleFilters()\\\">\\n                <i class=\\\"icon-ab-searchfilter\\\"></i>\\n                <span>Filters</span>\\n              </button>\\n              <div class=\\\"filters-body \\\" *ngIf=\\\"showFilters\\\">\\n                <div class=\\\"arrow-up\\\"></div>\\n                <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && applyFilters(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n                    <div class=\\\"form-group\\\">\\n                        <label>DATE</label>\\n                        <app-datepicker\\n                            class=\\\"form-control bdr-none p-a-0\\\"\\n                            name=\\\"searchDate\\\" \\n                            [(ngModel)]=\\\"searchDate\\\"\\n                            #searchDatectrl= \\\"ngModel\\\"\\n                            appForbiddenName=\\\"fred\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': f.submitted && searchDatectrl.invalid }\\\"\\n                            [datePickerModel]=\\\"datePickerModel\\\"          \\n                            searchDatectrl>\\n                        </app-datepicker>\\n                     <div *ngIf=\\\"f.submitted && searchDatectrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"searchDatectrl.errors.required\\\">Search Date is required</div>\\n                     </div>\\n                    </div>\\n                  <div class=\\\"form-group m-t-3\\\">\\n                    <button class=\\\"btn btn-primary w-100p\\\" type=\\\"submit\\\">Search</button>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        <div class=\\\"col-md-12 p-a-0 p-t-1\\\">\\n          <nav aria-label=\\\"breadcrumb\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n              <li class=\\\"breadcrumb-item\\\"><a class=\\\"text-abhaya\\\" [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n              <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Command Management</li>\\n              <li class=\\\"breadcrumb-item active text-secondary\\\" aria-current=\\\"page\\\">Command History</li>\\n            </ol>\\n          </nav>\\n        </div>\\n      </div>\\n      <div class=\\\"row no-gutters m-b-3\\\">\\n          <div class=\\\"col-md-6 p-a-0\\\">\\n              <div class=\\\"form-group abhaya-table-search\\\">\\n                <i class=\\\"icon-ab-search\\\"></i>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (keydown.enter)=\\\"getCommandDetails()\\\" placeholder=\\\"Search by IMEI / Mobile No.\\\">\\n                <span class=\\\"separator\\\"> </span>\\n              </div>\\n            </div>\\n        <div class=\\\"col-md-6 p-a-0 text-primary text-right p-t-2\\\">\\n          Total Records : <h5 class=\\\"total-records-text d-inline-block\\\">  {{page.totalElements}} </h5>\\n        </div>\\n        \\n      </div>\\n      <div class=\\\"row no-gutters pt-8\\\">\\n        <table class=\\\"abhaya-table\\\">\\n          <thead>\\n            <tr>\\n              <th>ID</th>\\n              <th>IMEI Number</th>\\n              <th>Description</th>\\n              <th>Mobile Number</th>\\n              <th>Created Date</th>\\n              <th></th>\\n            </tr>\\n          </thead>\\n         <tbody *ngIf=\\\"isDataExists\\\">\\n            <tr *ngFor=\\\"let commandList of commandListData\\\">\\n                <td>{{commandList.taskId}}</td>\\n                <td>{{commandList.imeiNumber}}</td>\\n                <td>{{commandList.description}}</td>\\n                <td>{{commandList.mobileNumber}}</td>\\n                <td>{{commandList.createdDate}}</td>\\n                <td>\\n                    <a class=\\\"\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                    aria-expanded=\\\"false\\\"><i class=\\\"icon-ab_more\\\"></i></a>\\n                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                    <div class=\\\"arrow-up\\\"></div>\\n                    <a (click)=\\\"editviewCommand(commandList)\\\" class=\\\"dropdown-item\\\">View Details</a>\\n                    </div>\\n                </td>\\n              </tr>\\n         </tbody>\\n        </table>  \\n        <!--Pagination-->\\n        <app-nodata class=\\\"w-100p\\\" *ngIf=\\\"!isDataExists\\\" [noDataText]='noDataText'></app-nodata>\\n         <div class=\\\"row no-gutters w-100p m-t-5\\\">\\n            <div *ngIf=\\\"isDataExists\\\" class=\\\"float-left p-t-1 page-size\\\">\\n                <span>Page Size :</span>\\n                <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSize\\\">\\n                  <option *ngFor=\\\"let number of pageSizeValues\\\" value=\\\"{{number}}\\\">{{number}}</option>\\n                </select>\\n              </div>\\n            <div *ngIf=\\\"isDataExists\\\" style=\\\"margin:0px auto;\\\">\\n              <pagination-controls id=\\\"systemPropertiespage\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\"\\n                directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n              </pagination-controls>\\n             \\n            </div>\\n          </div>\\n      </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2NvbW1hbmRtYW5hZ2VtZW50L2NvbW1hbmRoaXN0b3J5L2NvbW1hbmRoaXN0b3J5LmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CommandManagementService } from '../../../common/services/commandmanagementserviceapi';\nimport { PaginationModel } from '../../../common/models/pagination.model';\nimport { DatePickerModel } from '../../../common/models/date-picker-model.model';\nimport { PageModel } from 'src/app/common/models/page.model';\nimport { environment } from 'src/environments/environment';\nimport {CommandManagement} from '../../../common/models/commandmanagement.model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { EditviewcommhistoryComponent } from '../modalpopup/editviewcommhistory/editviewcommhistory.component';\n\n@Component({\n  selector: 'app-commandhistory',\n  templateUrl: './commandhistory.component.html',\n  styleUrls: ['./commandhistory.component.sass']\n})\nexport class CommandhistoryComponent implements OnInit {\n\n  constructor(private commandApi: CommandManagementService, private modalService: NgbModal) { }\n  commandListData : Array<CommandManagement>;\n  public isDataExists: Boolean = false;\n  datePickerModel: DatePickerModel;\n  public page: PageModel = new PageModel();\n  noDataText: string = \"No Command History Details Available\";\n  pageSizeValues: Array<number> = environment.pageSizeValues;\n  public intilPageNumber: Number = 0;\n  showFilters: boolean = false;\n  public p: Number;\n  public searchDate : string = '';\n  searchText : string = '';\n  public pageSize: Number = environment.pageSize;\n\n  ngOnInit() {\n    this.getCommandDetails();\n  }\n  toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  applyFilters(parentForm) {\n      this.getCommandDetails();\n  }\n   refreshPage(){\n    this.intilPageNumber = 0;\n    this.pageSize = environment.pageSize;\n    this.searchText = '';\n    this.searchDate = '';\n    this.getCommandDetails();\n  }\n  getCommandDetails() {\n    this.commandApi.getCommandList(this.intilPageNumber, this.pageSize, this.searchDate, this.searchText)\n        .subscribe((data: PaginationModel) => {\n            this.commandListData = data.content;\n            this.isDataExists = (this.commandListData.length > 0);\n            this.page = data.page;\n        });\n  }\n\n  changePageSize() {\n    this.getCommandDetails();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.intilPageNumber = event - 1;\n    this.getCommandDetails();\n  }\n\n  editviewCommand(commandList : CommandManagement){\n    const modalRef = this.modalService.open(EditviewcommhistoryComponent, {\n      size: 'lg', backdrop: 'static',\n      keyboard: false\n    });\n    modalRef.componentInstance.selectedCommandDetails = commandList;\n  }\n\n  getCommHistoryDetails(){\n    console.log('testing');\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommandexecuteComponent } from './commandexecute/commandexecute.component';\r\nimport { CommandhistoryComponent } from './commandhistory/commandhistory.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'commandexecute', component: CommandexecuteComponent },\r\n    { path: 'commandhistory', component: CommandhistoryComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CommandManagementRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CommandManagementRoutingModule } from './commandmanagement-routing.module';\nimport { CommandexecuteComponent } from './commandexecute/commandexecute.component';\nimport { CommandhistoryComponent } from './commandhistory/commandhistory.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { CoreModule } from \"../core/core.module\";\nimport { BsDatepickerModule } from 'ngx-bootstrap';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {EditviewcommhistoryComponent } from './modalpopup/editviewcommhistory/editviewcommhistory.component';\n\n@NgModule({\n  declarations: [CommandexecuteComponent, CommandhistoryComponent, EditviewcommhistoryComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    CommandManagementRoutingModule,\n    NgxPaginationModule,\n    NgbModule,\n    BsDatepickerModule.forRoot(),\n    CoreModule,\n  ],\n  entryComponents: [\n    EditviewcommhistoryComponent\n  ],\n})\nexport class CommandmanagementModule { }\n","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Command History Details of {{selectedCommandDetails.imeiNumber}}</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close('refreshContent')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body p-r-2\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <h5>ID</h5>\\n        <h4>{{selectedCommandDetails.taskId}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>IMEI Number</h5>\\n        <h4>{{selectedCommandDetails.imeiNumber}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>Mobile Number</h5>\\n        <h4>{{selectedCommandDetails.mobileNumber}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>Description</h5>\\n        <h4>{{selectedCommandDetails.description}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>Created Date</h5>\\n        <h4>{{selectedCommandDetails.createdDate}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>Random Code</h5>\\n        <h4>{{selectedCommandDetails.randomCode}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>Reply Gateway Number</h5>\\n        <h4>{{selectedCommandDetails.replyGatewayNumber}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>Request Command Name</h5>\\n        <h4>{{selectedCommandDetails.requestCommandName}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>SMS Status</h5>\\n        <h4>{{selectedCommandDetails.smsStatus}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h5>Device Response Status</h5>\\n        <h4>{{selectedCommandDetails.deviceResponseStatus}}</h4>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n          <h5>Header</h5>\\n          <h4>{{selectedCommandDetails.header}}</h4>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <h5>Payload</h5>\\n          <h4>{{selectedCommandDetails.payload}}</h4>\\n        </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5Db21wb25lbnRzL2NvbW1hbmRtYW5hZ2VtZW50L21vZGFscG9wdXAvZWRpdHZpZXdjb21taGlzdG9yeS9lZGl0dmlld2NvbW1oaXN0b3J5LmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CommandManagement } from '../../../../common/models/commandmanagement.model';\n\n@Component({\n  selector: 'app-editviewcommhistory',\n  templateUrl: './editviewcommhistory.component.html',\n  styleUrls: ['./editviewcommhistory.component.sass']\n})\nexport class EditviewcommhistoryComponent implements OnInit {\n\n  constructor(public activeModal: NgbActiveModal) { }\n  @Input() selectedCommandDetails : CommandManagement;\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}